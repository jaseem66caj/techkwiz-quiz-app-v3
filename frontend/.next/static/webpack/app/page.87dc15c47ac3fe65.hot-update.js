"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/types/admin.ts":
/*!****************************!*\
  !*** ./src/types/admin.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACHIEVEMENT_ICONS: () => (/* binding */ ACHIEVEMENT_ICONS),\n/* harmony export */   ALLOWED_FILE_TYPES: () => (/* binding */ ALLOWED_FILE_TYPES),\n/* harmony export */   ANALYTICS_STORAGE_KEYS: () => (/* binding */ ANALYTICS_STORAGE_KEYS),\n/* harmony export */   AVAILABLE_LANGUAGES: () => (/* binding */ AVAILABLE_LANGUAGES),\n/* harmony export */   AVAILABLE_TIMEZONES: () => (/* binding */ AVAILABLE_TIMEZONES),\n/* harmony export */   CHART_COLORS: () => (/* binding */ CHART_COLORS),\n/* harmony export */   DEFAULT_ACHIEVEMENT_TEMPLATES: () => (/* binding */ DEFAULT_ACHIEVEMENT_TEMPLATES),\n/* harmony export */   DEFAULT_CATEGORIES: () => (/* binding */ DEFAULT_CATEGORIES),\n/* harmony export */   DEFAULT_FILE_SETTINGS: () => (/* binding */ DEFAULT_FILE_SETTINGS),\n/* harmony export */   DEFAULT_REWARD_CONFIG: () => (/* binding */ DEFAULT_REWARD_CONFIG),\n/* harmony export */   DEFAULT_SECURITY_SETTINGS: () => (/* binding */ DEFAULT_SECURITY_SETTINGS),\n/* harmony export */   DEFAULT_SYSTEM_SETTINGS: () => (/* binding */ DEFAULT_SYSTEM_SETTINGS),\n/* harmony export */   DEFAULT_TIME_RANGES: () => (/* binding */ DEFAULT_TIME_RANGES),\n/* harmony export */   DEFAULT_USER_PREFERENCES: () => (/* binding */ DEFAULT_USER_PREFERENCES),\n/* harmony export */   FILE_ICONS: () => (/* binding */ FILE_ICONS),\n/* harmony export */   FILE_SIZE_LIMITS: () => (/* binding */ FILE_SIZE_LIMITS),\n/* harmony export */   FILE_STORAGE_KEYS: () => (/* binding */ FILE_STORAGE_KEYS),\n/* harmony export */   QUIZ_STORAGE_KEYS: () => (/* binding */ QUIZ_STORAGE_KEYS),\n/* harmony export */   REWARD_STORAGE_KEYS: () => (/* binding */ REWARD_STORAGE_KEYS),\n/* harmony export */   SETTINGS_STORAGE_KEYS: () => (/* binding */ SETTINGS_STORAGE_KEYS)\n/* harmony export */ });\n// localStorage keys\nconst QUIZ_STORAGE_KEYS = {\n    QUESTIONS: 'admin_quiz_questions',\n    DRAFTS: 'admin_quiz_drafts',\n    SETTINGS: 'admin_quiz_settings',\n    BACKUP: 'admin_quiz_backup'\n};\nconst REWARD_STORAGE_KEYS = {\n    CONFIG: 'admin_reward_config',\n    ACHIEVEMENTS: 'admin_achievements',\n    SETTINGS: 'admin_reward_settings',\n    BACKUP: 'admin_reward_backup'\n};\nconst ANALYTICS_STORAGE_KEYS = {\n    DATA: 'admin_analytics_data',\n    SETTINGS: 'admin_analytics_settings',\n    CACHE: 'admin_analytics_cache',\n    EXPORT_HISTORY: 'admin_analytics_exports'\n};\nconst SETTINGS_STORAGE_KEYS = {\n    SYSTEM: 'admin_system_settings',\n    USER_PREFERENCES: 'admin_user_preferences',\n    SECURITY: 'admin_security_settings',\n    INTEGRATIONS: 'admin_integration_settings',\n    BACKUP: 'admin_settings_backup'\n};\nconst FILE_STORAGE_KEYS = {\n    FILES: 'admin_files',\n    FOLDERS: 'admin_folders',\n    SETTINGS: 'admin_file_settings',\n    QUOTA: 'admin_storage_quota',\n    CACHE: 'admin_file_cache'\n};\n// Default time ranges for analytics\nconst DEFAULT_TIME_RANGES = [\n    {\n        start: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),\n        end: new Date(),\n        label: 'Last 7 days'\n    },\n    {\n        start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000),\n        end: new Date(),\n        label: 'Last 30 days'\n    },\n    {\n        start: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000),\n        end: new Date(),\n        label: 'Last 3 months'\n    },\n    {\n        start: new Date(Date.now() - 365 * 24 * 60 * 60 * 1000),\n        end: new Date(),\n        label: 'Last year'\n    }\n];\n// Chart color palette\nconst CHART_COLORS = {\n    primary: '#3B82F6',\n    secondary: '#10B981',\n    accent: '#F59E0B',\n    danger: '#EF4444',\n    purple: '#8B5CF6',\n    pink: '#EC4899',\n    indigo: '#6366F1',\n    teal: '#14B8A6'\n};\n// Default categories\nconst DEFAULT_CATEGORIES = [\n    {\n        id: 'movies',\n        name: 'Movies',\n        description: 'Film and cinema questions',\n        questionCount: 0\n    },\n    {\n        id: 'social-media',\n        name: 'Social Media',\n        description: 'Social platforms and trends',\n        questionCount: 0\n    },\n    {\n        id: 'influencers',\n        name: 'Influencers',\n        description: 'Content creators and personalities',\n        questionCount: 0\n    },\n    {\n        id: 'gen-z',\n        name: 'Gen Z',\n        description: 'Generation Z culture and trends',\n        questionCount: 0\n    },\n    {\n        id: 'gaming',\n        name: 'Gaming',\n        description: 'Video games and gaming culture',\n        questionCount: 0\n    },\n    {\n        id: 'music',\n        name: 'Music',\n        description: 'Artists, songs, and music industry',\n        questionCount: 0\n    },\n    {\n        id: 'travel',\n        name: 'Travel',\n        description: 'Destinations and travel culture',\n        questionCount: 0\n    },\n    {\n        id: 'food',\n        name: 'Food',\n        description: 'Cuisine and food trends',\n        questionCount: 0\n    },\n    {\n        id: 'animals',\n        name: 'Animals',\n        description: 'Wildlife and pets',\n        questionCount: 0\n    },\n    {\n        id: 'facts',\n        name: 'Facts',\n        description: 'Interesting facts and trivia',\n        questionCount: 0\n    }\n];\n// Default reward configuration\nconst DEFAULT_REWARD_CONFIG = {\n    coinValues: {\n        correct: 14,\n        incorrect: 5,\n        bonus: 50,\n        streakMultiplier: 2\n    },\n    achievements: [],\n    popupSettings: {\n        animationType: 'treasure_chest',\n        duration: 3,\n        showFunFact: true,\n        autoClose: true,\n        adSenseEnabled: false,\n        customMessages: {\n            correct: 'Great job! You earned {coins} coins!',\n            incorrect: 'Keep trying! You earned {coins} coins for the attempt.',\n            bonus: 'Bonus question! You earned {coins} coins!',\n            achievement: 'Achievement unlocked: {achievement}!'\n        }\n    },\n    adSenseConfig: {\n        enabled: false,\n        adUnitId: '',\n        adSlotId: '',\n        testMode: true,\n        placement: 'popup',\n        frequency: 5\n    },\n    isEnabled: true\n};\n// Default achievement templates\nconst DEFAULT_ACHIEVEMENT_TEMPLATES = [\n    {\n        name: 'First Steps',\n        description: 'Answer your first question',\n        icon: 'üéØ',\n        requirement: {\n            type: 'questions_answered',\n            value: 1\n        },\n        reward: {\n            coins: 25,\n            badge: 'beginner'\n        },\n        isActive: true\n    },\n    {\n        name: 'Streak Master',\n        description: 'Get 5 questions correct in a row',\n        icon: 'üî•',\n        requirement: {\n            type: 'correct_streak',\n            value: 5\n        },\n        reward: {\n            coins: 100,\n            badge: 'streak'\n        },\n        isActive: true\n    },\n    {\n        name: 'Category Expert',\n        description: 'Answer 10 questions correctly in any category',\n        icon: 'üëë',\n        requirement: {\n            type: 'category_master',\n            value: 10\n        },\n        reward: {\n            coins: 200,\n            badge: 'expert'\n        },\n        isActive: true\n    }\n];\n// Achievement icons\nconst ACHIEVEMENT_ICONS = [\n    'üéØ',\n    'üî•',\n    'üëë',\n    'üèÜ',\n    '‚≠ê',\n    'üíé',\n    'üéñÔ∏è',\n    'ü•á',\n    'ü•à',\n    'ü•â',\n    'üé™',\n    'üé®',\n    'üé≠',\n    'üé™',\n    'üéØ',\n    'üé≤',\n    'üéÆ',\n    'üé∏',\n    'üé∫',\n    'üéª'\n];\n// File type configurations\nconst ALLOWED_FILE_TYPES = {\n    images: [\n        'image/jpeg',\n        'image/png',\n        'image/gif',\n        'image/webp'\n    ],\n    documents: [\n        'application/pdf',\n        'text/plain',\n        'application/msword',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    ],\n    audio: [\n        'audio/mpeg',\n        'audio/wav',\n        'audio/ogg'\n    ],\n    video: [\n        'video/mp4',\n        'video/webm',\n        'video/ogg'\n    ]\n};\nconst FILE_SIZE_LIMITS = {\n    maxFileSize: 10 * 1024 * 1024,\n    maxTotalSize: 100 * 1024 * 1024,\n    thumbnailSize: 200,\n    previewSize: 800 // 800px previews\n};\n// Default file settings\nconst DEFAULT_FILE_SETTINGS = {\n    maxFileSize: FILE_SIZE_LIMITS.maxFileSize,\n    allowedTypes: [\n        ...ALLOWED_FILE_TYPES.images,\n        ...ALLOWED_FILE_TYPES.documents,\n        ...ALLOWED_FILE_TYPES.audio,\n        ...ALLOWED_FILE_TYPES.video\n    ],\n    autoOptimize: true,\n    generateThumbnails: true,\n    defaultFolder: 'uploads',\n    compressionLevel: 80\n};\n// File icons mapping\nconst FILE_ICONS = {\n    // Images\n    'image/jpeg': 'üñºÔ∏è',\n    'image/png': 'üñºÔ∏è',\n    'image/gif': 'üéûÔ∏è',\n    'image/webp': 'üñºÔ∏è',\n    // Documents\n    'application/pdf': 'üìÑ',\n    'text/plain': 'üìù',\n    'application/msword': 'üìÑ',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'üìÑ',\n    // Audio\n    'audio/mpeg': 'üéµ',\n    'audio/wav': 'üéµ',\n    'audio/ogg': 'üéµ',\n    // Video\n    'video/mp4': 'üé¨',\n    'video/webm': 'üé¨',\n    'video/ogg': 'üé¨',\n    // Folders\n    'folder': 'üìÅ',\n    // Default\n    'default': 'üìé'\n};\n// Default system settings\nconst DEFAULT_SYSTEM_SETTINGS = {\n    applicationName: 'TechKwiz',\n    applicationVersion: '1.0.0',\n    maintenanceMode: false,\n    debugMode: false,\n    logLevel: 'info',\n    maxUsers: 100,\n    sessionTimeout: 30,\n    autoBackup: true,\n    backupFrequency: 'weekly'\n};\n// Default user preferences\nconst DEFAULT_USER_PREFERENCES = {\n    theme: 'light',\n    language: 'en',\n    timezone: 'UTC',\n    dateFormat: 'MM/DD/YYYY',\n    timeFormat: '12h',\n    dashboardLayout: 'comfortable',\n    notifications: {\n        emailNotifications: true,\n        pushNotifications: false,\n        systemAlerts: true,\n        maintenanceAlerts: true,\n        securityAlerts: true,\n        digestFrequency: 'daily'\n    },\n    accessibility: {\n        highContrast: false,\n        largeText: false,\n        reducedMotion: false,\n        screenReader: false,\n        keyboardNavigation: true\n    }\n};\n// Default security settings\nconst DEFAULT_SECURITY_SETTINGS = {\n    passwordPolicy: {\n        minLength: 8,\n        requireUppercase: true,\n        requireLowercase: true,\n        requireNumbers: true,\n        requireSpecialChars: true,\n        expirationDays: 90,\n        preventReuse: 5\n    },\n    sessionSecurity: {\n        maxConcurrentSessions: 3,\n        idleTimeout: 30,\n        forceLogoutOnPasswordChange: true,\n        requireReauthForSensitive: true\n    },\n    loginAttempts: {\n        maxAttempts: 5,\n        lockoutDuration: 15,\n        resetAfter: 60,\n        notifyOnLockout: true\n    },\n    twoFactorAuth: false,\n    ipWhitelist: [],\n    auditLogging: true,\n    encryptionEnabled: true\n};\n// Available languages\nconst AVAILABLE_LANGUAGES = [\n    {\n        code: 'en',\n        name: 'English',\n        flag: 'üá∫üá∏'\n    },\n    {\n        code: 'es',\n        name: 'Espa√±ol',\n        flag: 'üá™üá∏'\n    },\n    {\n        code: 'fr',\n        name: 'Fran√ßais',\n        flag: 'üá´üá∑'\n    },\n    {\n        code: 'de',\n        name: 'Deutsch',\n        flag: 'üá©üá™'\n    },\n    {\n        code: 'it',\n        name: 'Italiano',\n        flag: 'üáÆüáπ'\n    },\n    {\n        code: 'pt',\n        name: 'Portugu√™s',\n        flag: 'üáµüáπ'\n    },\n    {\n        code: 'ru',\n        name: '–†—É—Å—Å–∫–∏–π',\n        flag: 'üá∑üá∫'\n    },\n    {\n        code: 'ja',\n        name: 'Êó•Êú¨Ë™û',\n        flag: 'üáØüáµ'\n    },\n    {\n        code: 'ko',\n        name: 'ÌïúÍµ≠Ïñ¥',\n        flag: 'üá∞üá∑'\n    },\n    {\n        code: 'zh',\n        name: '‰∏≠Êñá',\n        flag: 'üá®üá≥'\n    }\n];\n// Available timezones\nconst AVAILABLE_TIMEZONES = [\n    {\n        value: 'UTC',\n        label: 'UTC (Coordinated Universal Time)'\n    },\n    {\n        value: 'America/New_York',\n        label: 'Eastern Time (ET)'\n    },\n    {\n        value: 'America/Chicago',\n        label: 'Central Time (CT)'\n    },\n    {\n        value: 'America/Denver',\n        label: 'Mountain Time (MT)'\n    },\n    {\n        value: 'America/Los_Angeles',\n        label: 'Pacific Time (PT)'\n    },\n    {\n        value: 'Europe/London',\n        label: 'Greenwich Mean Time (GMT)'\n    },\n    {\n        value: 'Europe/Paris',\n        label: 'Central European Time (CET)'\n    },\n    {\n        value: 'Asia/Tokyo',\n        label: 'Japan Standard Time (JST)'\n    },\n    {\n        value: 'Asia/Shanghai',\n        label: 'China Standard Time (CST)'\n    },\n    {\n        value: 'Australia/Sydney',\n        label: 'Australian Eastern Time (AET)'\n    }\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/types/admin.ts\n"));

/***/ })

});