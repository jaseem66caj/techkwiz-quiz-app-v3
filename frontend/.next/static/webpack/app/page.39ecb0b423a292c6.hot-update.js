"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/rewardDataManager.ts":
/*!****************************************!*\
  !*** ./src/utils/rewardDataManager.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REWARD_VALIDATION_RULES: () => (/* binding */ REWARD_VALIDATION_RULES),\n/* harmony export */   RewardDataError: () => (/* binding */ RewardDataError),\n/* harmony export */   rewardDataManager: () => (/* binding */ rewardDataManager)\n/* harmony export */ });\n/* harmony import */ var _types_admin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/admin */ \"(app-pages-browser)/./src/types/admin.ts\");\n\n// Validation rules for reward configuration\nconst REWARD_VALIDATION_RULES = {\n    COIN_MIN_VALUE: 1,\n    COIN_MAX_VALUE: 1000,\n    STREAK_MIN_MULTIPLIER: 1,\n    STREAK_MAX_MULTIPLIER: 10,\n    POPUP_MIN_DURATION: 1,\n    POPUP_MAX_DURATION: 10,\n    AD_MIN_FREQUENCY: 1,\n    AD_MAX_FREQUENCY: 20,\n    ACHIEVEMENT_NAME_MIN_LENGTH: 3,\n    ACHIEVEMENT_NAME_MAX_LENGTH: 50,\n    ACHIEVEMENT_DESC_MIN_LENGTH: 10,\n    ACHIEVEMENT_DESC_MAX_LENGTH: 200,\n    REQUIREMENT_MIN_VALUE: 1,\n    REQUIREMENT_MAX_VALUE: 1000\n};\n// Error types\nclass RewardDataError extends Error {\n    constructor(message, code){\n        super(message), this.code = code;\n        this.name = 'RewardDataError';\n    }\n}\n// Utility functions for localStorage operations\nclass RewardDataManager {\n    static getInstance() {\n        if (!RewardDataManager.instance) {\n            RewardDataManager.instance = new RewardDataManager();\n        }\n        return RewardDataManager.instance;\n    }\n    // Safe localStorage operations with error handling\n    safeGetItem(key) {\n        try {\n            return localStorage.getItem(key);\n        } catch (error) {\n            console.error(\"Error reading from localStorage key \".concat(key, \":\"), error);\n            return null;\n        }\n    }\n    safeSetItem(key, value) {\n        try {\n            localStorage.setItem(key, value);\n            return true;\n        } catch (error) {\n            console.error(\"Error writing to localStorage key \".concat(key, \":\"), error);\n            if (error instanceof DOMException && error.code === 22) {\n                throw new RewardDataError('Storage quota exceeded. Please clear some data.', 'QUOTA_EXCEEDED');\n            }\n            return false;\n        }\n    }\n    // Reward Configuration CRUD operations\n    getRewardConfig() {\n        const data = this.safeGetItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.REWARD_STORAGE_KEYS.CONFIG);\n        if (!data) return this.initializeWithDefaults();\n        try {\n            const config = JSON.parse(data);\n            return this.validateAndMigrateConfig(config);\n        } catch (error) {\n            console.error('Error parsing reward config data:', error);\n            return this.initializeWithDefaults();\n        }\n    }\n    saveRewardConfig(config) {\n        const currentConfig = this.getRewardConfig();\n        const updatedConfig = {\n            ...currentConfig,\n            ...config,\n            updatedAt: Date.now()\n        };\n        this.validateRewardConfig(updatedConfig);\n        this.safeSetItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.REWARD_STORAGE_KEYS.CONFIG, JSON.stringify(updatedConfig));\n        return updatedConfig;\n    }\n    // Achievement CRUD operations\n    getAchievements() {\n        const config = this.getRewardConfig();\n        return config.achievements || [];\n    }\n    // Alias for getAchievements for compatibility\n    getAllAchievements() {\n        return this.getAchievements();\n    }\n    saveAchievement(achievement) {\n        this.validateAchievement(achievement);\n        const config = this.getRewardConfig();\n        const now = Date.now();\n        const newAchievement = {\n            ...achievement,\n            id: this.generateId('ach'),\n            createdAt: now,\n            updatedAt: now\n        };\n        config.achievements.push(newAchievement);\n        this.saveRewardConfig({\n            achievements: config.achievements\n        });\n        return newAchievement;\n    }\n    updateAchievement(id, updates) {\n        const config = this.getRewardConfig();\n        const index = config.achievements.findIndex((a)=>a.id === id);\n        if (index === -1) {\n            throw new RewardDataError(\"Achievement with id \".concat(id, \" not found\"), 'NOT_FOUND');\n        }\n        const updatedAchievement = {\n            ...config.achievements[index],\n            ...updates,\n            updatedAt: Date.now()\n        };\n        this.validateAchievement(updatedAchievement);\n        config.achievements[index] = updatedAchievement;\n        this.saveRewardConfig({\n            achievements: config.achievements\n        });\n        return updatedAchievement;\n    }\n    deleteAchievement(id) {\n        const config = this.getRewardConfig();\n        const filteredAchievements = config.achievements.filter((a)=>a.id !== id);\n        if (filteredAchievements.length === config.achievements.length) {\n            throw new RewardDataError(\"Achievement with id \".concat(id, \" not found\"), 'NOT_FOUND');\n        }\n        this.saveRewardConfig({\n            achievements: filteredAchievements\n        });\n        return true;\n    }\n    // Achievement template operations\n    createAchievementFromTemplate(templateIndex) {\n        if (templateIndex < 0 || templateIndex >= _types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ACHIEVEMENT_TEMPLATES.length) {\n            throw new RewardDataError('Invalid template index', 'INVALID_TEMPLATE');\n        }\n        const template = _types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ACHIEVEMENT_TEMPLATES[templateIndex];\n        return this.saveAchievement(template);\n    }\n    // Preview data generation\n    generatePreviewData(type, customCoins) {\n        const config = this.getRewardConfig();\n        switch(type){\n            case 'correct':\n                return {\n                    type: 'correct',\n                    coins: customCoins || config.coinValues.correct,\n                    message: config.popupSettings.customMessages.correct.replace('{coins}', (customCoins || config.coinValues.correct).toString()),\n                    funFact: config.popupSettings.showFunFact ? 'This is a sample fun fact for preview!' : undefined\n                };\n            case 'incorrect':\n                return {\n                    type: 'incorrect',\n                    coins: customCoins || config.coinValues.incorrect,\n                    message: config.popupSettings.customMessages.incorrect.replace('{coins}', (customCoins || config.coinValues.incorrect).toString())\n                };\n            case 'bonus':\n                return {\n                    type: 'bonus',\n                    coins: customCoins || config.coinValues.bonus,\n                    message: config.popupSettings.customMessages.bonus.replace('{coins}', (customCoins || config.coinValues.bonus).toString()),\n                    funFact: config.popupSettings.showFunFact ? 'Bonus questions often contain interesting trivia!' : undefined\n                };\n            case 'achievement':\n                const sampleAchievement = config.achievements[0] || _types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ACHIEVEMENT_TEMPLATES[0];\n                return {\n                    type: 'achievement',\n                    coins: sampleAchievement.reward.coins,\n                    message: config.popupSettings.customMessages.achievement.replace('{achievement}', sampleAchievement.name),\n                    achievement: sampleAchievement\n                };\n            default:\n                throw new RewardDataError('Invalid preview type', 'INVALID_PREVIEW_TYPE');\n        }\n    }\n    // Validation methods\n    validateRewardConfig(config) {\n        // Validate coin values\n        if (config.coinValues.correct < REWARD_VALIDATION_RULES.COIN_MIN_VALUE || config.coinValues.correct > REWARD_VALIDATION_RULES.COIN_MAX_VALUE) {\n            throw new RewardDataError(\"Correct answer coins must be between \".concat(REWARD_VALIDATION_RULES.COIN_MIN_VALUE, \" and \").concat(REWARD_VALIDATION_RULES.COIN_MAX_VALUE), 'INVALID_COIN_VALUE');\n        }\n        if (config.coinValues.incorrect < REWARD_VALIDATION_RULES.COIN_MIN_VALUE || config.coinValues.incorrect > REWARD_VALIDATION_RULES.COIN_MAX_VALUE) {\n            throw new RewardDataError(\"Incorrect answer coins must be between \".concat(REWARD_VALIDATION_RULES.COIN_MIN_VALUE, \" and \").concat(REWARD_VALIDATION_RULES.COIN_MAX_VALUE), 'INVALID_COIN_VALUE');\n        }\n        if (config.coinValues.bonus < REWARD_VALIDATION_RULES.COIN_MIN_VALUE || config.coinValues.bonus > REWARD_VALIDATION_RULES.COIN_MAX_VALUE) {\n            throw new RewardDataError(\"Bonus question coins must be between \".concat(REWARD_VALIDATION_RULES.COIN_MIN_VALUE, \" and \").concat(REWARD_VALIDATION_RULES.COIN_MAX_VALUE), 'INVALID_COIN_VALUE');\n        }\n        if (config.coinValues.streakMultiplier < REWARD_VALIDATION_RULES.STREAK_MIN_MULTIPLIER || config.coinValues.streakMultiplier > REWARD_VALIDATION_RULES.STREAK_MAX_MULTIPLIER) {\n            throw new RewardDataError(\"Streak multiplier must be between \".concat(REWARD_VALIDATION_RULES.STREAK_MIN_MULTIPLIER, \" and \").concat(REWARD_VALIDATION_RULES.STREAK_MAX_MULTIPLIER), 'INVALID_STREAK_MULTIPLIER');\n        }\n        // Validate popup settings\n        if (config.popupSettings.duration < REWARD_VALIDATION_RULES.POPUP_MIN_DURATION || config.popupSettings.duration > REWARD_VALIDATION_RULES.POPUP_MAX_DURATION) {\n            throw new RewardDataError(\"Popup duration must be between \".concat(REWARD_VALIDATION_RULES.POPUP_MIN_DURATION, \" and \").concat(REWARD_VALIDATION_RULES.POPUP_MAX_DURATION, \" seconds\"), 'INVALID_POPUP_DURATION');\n        }\n        // Validate AdSense config\n        if (config.adSenseConfig.frequency < REWARD_VALIDATION_RULES.AD_MIN_FREQUENCY || config.adSenseConfig.frequency > REWARD_VALIDATION_RULES.AD_MAX_FREQUENCY) {\n            throw new RewardDataError(\"Ad frequency must be between \".concat(REWARD_VALIDATION_RULES.AD_MIN_FREQUENCY, \" and \").concat(REWARD_VALIDATION_RULES.AD_MAX_FREQUENCY), 'INVALID_AD_FREQUENCY');\n        }\n    }\n    validateAchievement(achievement) {\n        if (!achievement.name || achievement.name.length < REWARD_VALIDATION_RULES.ACHIEVEMENT_NAME_MIN_LENGTH) {\n            throw new RewardDataError(\"Achievement name must be at least \".concat(REWARD_VALIDATION_RULES.ACHIEVEMENT_NAME_MIN_LENGTH, \" characters long\"), 'INVALID_ACHIEVEMENT_NAME');\n        }\n        if (achievement.name.length > REWARD_VALIDATION_RULES.ACHIEVEMENT_NAME_MAX_LENGTH) {\n            throw new RewardDataError(\"Achievement name must be no more than \".concat(REWARD_VALIDATION_RULES.ACHIEVEMENT_NAME_MAX_LENGTH, \" characters long\"), 'INVALID_ACHIEVEMENT_NAME');\n        }\n        if (!achievement.description || achievement.description.length < REWARD_VALIDATION_RULES.ACHIEVEMENT_DESC_MIN_LENGTH) {\n            throw new RewardDataError(\"Achievement description must be at least \".concat(REWARD_VALIDATION_RULES.ACHIEVEMENT_DESC_MIN_LENGTH, \" characters long\"), 'INVALID_ACHIEVEMENT_DESCRIPTION');\n        }\n        if (achievement.description.length > REWARD_VALIDATION_RULES.ACHIEVEMENT_DESC_MAX_LENGTH) {\n            throw new RewardDataError(\"Achievement description must be no more than \".concat(REWARD_VALIDATION_RULES.ACHIEVEMENT_DESC_MAX_LENGTH, \" characters long\"), 'INVALID_ACHIEVEMENT_DESCRIPTION');\n        }\n        if (!achievement.requirement || achievement.requirement.value < REWARD_VALIDATION_RULES.REQUIREMENT_MIN_VALUE || achievement.requirement.value > REWARD_VALIDATION_RULES.REQUIREMENT_MAX_VALUE) {\n            throw new RewardDataError(\"Achievement requirement value must be between \".concat(REWARD_VALIDATION_RULES.REQUIREMENT_MIN_VALUE, \" and \").concat(REWARD_VALIDATION_RULES.REQUIREMENT_MAX_VALUE), 'INVALID_REQUIREMENT_VALUE');\n        }\n        if (!achievement.reward || achievement.reward.coins < REWARD_VALIDATION_RULES.COIN_MIN_VALUE || achievement.reward.coins > REWARD_VALIDATION_RULES.COIN_MAX_VALUE) {\n            throw new RewardDataError(\"Achievement reward coins must be between \".concat(REWARD_VALIDATION_RULES.COIN_MIN_VALUE, \" and \").concat(REWARD_VALIDATION_RULES.COIN_MAX_VALUE), 'INVALID_REWARD_COINS');\n        }\n    }\n    // Utility methods\n    initializeWithDefaults() {\n        const now = Date.now();\n        const defaultConfig = {\n            ..._types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_REWARD_CONFIG,\n            id: this.generateId('config'),\n            createdAt: now,\n            updatedAt: now\n        };\n        this.safeSetItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.REWARD_STORAGE_KEYS.CONFIG, JSON.stringify(defaultConfig));\n        return defaultConfig;\n    }\n    validateAndMigrateConfig(config) {\n        var _config_coinValues, _config_coinValues1, _config_coinValues2, _config_coinValues3;\n        var _config_coinValues_correct, _config_coinValues_incorrect, _config_coinValues_bonus, _config_coinValues_streakMultiplier, _config_isEnabled;\n        // Ensure all required properties exist with defaults\n        const migratedConfig = {\n            id: config.id || this.generateId('config'),\n            coinValues: {\n                correct: (_config_coinValues_correct = (_config_coinValues = config.coinValues) === null || _config_coinValues === void 0 ? void 0 : _config_coinValues.correct) !== null && _config_coinValues_correct !== void 0 ? _config_coinValues_correct : _types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_REWARD_CONFIG.coinValues.correct,\n                incorrect: (_config_coinValues_incorrect = (_config_coinValues1 = config.coinValues) === null || _config_coinValues1 === void 0 ? void 0 : _config_coinValues1.incorrect) !== null && _config_coinValues_incorrect !== void 0 ? _config_coinValues_incorrect : _types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_REWARD_CONFIG.coinValues.incorrect,\n                bonus: (_config_coinValues_bonus = (_config_coinValues2 = config.coinValues) === null || _config_coinValues2 === void 0 ? void 0 : _config_coinValues2.bonus) !== null && _config_coinValues_bonus !== void 0 ? _config_coinValues_bonus : _types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_REWARD_CONFIG.coinValues.bonus,\n                streakMultiplier: (_config_coinValues_streakMultiplier = (_config_coinValues3 = config.coinValues) === null || _config_coinValues3 === void 0 ? void 0 : _config_coinValues3.streakMultiplier) !== null && _config_coinValues_streakMultiplier !== void 0 ? _config_coinValues_streakMultiplier : _types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_REWARD_CONFIG.coinValues.streakMultiplier\n            },\n            achievements: config.achievements || [],\n            popupSettings: {\n                ..._types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_REWARD_CONFIG.popupSettings,\n                ...config.popupSettings\n            },\n            adSenseConfig: {\n                ..._types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_REWARD_CONFIG.adSenseConfig,\n                ...config.adSenseConfig\n            },\n            isEnabled: (_config_isEnabled = config.isEnabled) !== null && _config_isEnabled !== void 0 ? _config_isEnabled : _types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_REWARD_CONFIG.isEnabled,\n            createdAt: config.createdAt || Date.now(),\n            updatedAt: config.updatedAt || Date.now()\n        };\n        return migratedConfig;\n    }\n    generateId(prefix) {\n        return \"\".concat(prefix, \"_\").concat(Date.now(), \"_\").concat(Math.random().toString(36).substr(2, 9));\n    }\n    // Backup and restore functionality\n    createBackup() {\n        const backup = {\n            rewardConfig: this.getRewardConfig(),\n            timestamp: Date.now(),\n            version: '1.0'\n        };\n        return JSON.stringify(backup, null, 2);\n    }\n    restoreFromBackup(backupData) {\n        try {\n            const backup = JSON.parse(backupData);\n            if (!backup.rewardConfig) {\n                throw new RewardDataError('Invalid backup format: missing reward config', 'INVALID_BACKUP');\n            }\n            // Validate the backup data\n            this.validateRewardConfig(backup.rewardConfig);\n            // Create current backup before restore\n            const currentBackup = this.createBackup();\n            this.safeSetItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.REWARD_STORAGE_KEYS.BACKUP, currentBackup);\n            // Restore data\n            this.safeSetItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.REWARD_STORAGE_KEYS.CONFIG, JSON.stringify(backup.rewardConfig));\n            return true;\n        } catch (error) {\n            throw new RewardDataError(\"Failed to restore backup: \".concat(error instanceof Error ? error.message : 'Unknown error'), 'RESTORE_FAILED');\n        }\n    }\n    // Reset to defaults\n    resetToDefaults() {\n        // Create backup before reset\n        const currentBackup = this.createBackup();\n        this.safeSetItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.REWARD_STORAGE_KEYS.BACKUP, currentBackup);\n        // Clear current config and reinitialize\n        localStorage.removeItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.REWARD_STORAGE_KEYS.CONFIG);\n        return this.initializeWithDefaults();\n    }\n    // Export configuration as JSON\n    exportConfig() {\n        const config = this.getRewardConfig();\n        return JSON.stringify(config, null, 2);\n    }\n    // Import configuration from JSON\n    importConfig(configData) {\n        try {\n            const config = JSON.parse(configData);\n            this.validateRewardConfig(config);\n            // Create backup before import\n            const currentBackup = this.createBackup();\n            this.safeSetItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.REWARD_STORAGE_KEYS.BACKUP, currentBackup);\n            // Import the new configuration\n            const importedConfig = this.validateAndMigrateConfig(config);\n            this.safeSetItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.REWARD_STORAGE_KEYS.CONFIG, JSON.stringify(importedConfig));\n            return importedConfig;\n        } catch (error) {\n            throw new RewardDataError(\"Failed to import configuration: \".concat(error instanceof Error ? error.message : 'Unknown error'), 'IMPORT_FAILED');\n        }\n    }\n}\n// Export singleton instance\nconst rewardDataManager = RewardDataManager.getInstance();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/rewardDataManager.ts\n"));

/***/ })

});