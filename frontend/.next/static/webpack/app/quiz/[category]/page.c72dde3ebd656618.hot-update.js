"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/quiz/[category]/page",{

/***/ "(app-pages-browser)/./src/context/AdminContext.tsx":
/*!**************************************!*\
  !*** ./src/context/AdminContext.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdminProvider: () => (/* binding */ AdminProvider),\n/* harmony export */   useAdmin: () => (/* binding */ useAdmin)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ AdminProvider,useAdmin auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst AdminContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction AdminProvider(param) {\n    let { children } = param;\n    _s();\n    const [adminUser, setAdminUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // Don't block main app loading\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AdminProvider.useEffect\": ()=>{\n            // Check for stored admin token on mount\n            const storedToken = localStorage.getItem('admin_token');\n            const storedUsername = localStorage.getItem('admin_username');\n            if (storedToken && storedUsername) {\n                console.log('🔄 Found stored credentials, setting admin user immediately');\n                // Set user immediately to prevent redirect loops\n                setAdminUser({\n                    username: storedUsername,\n                    token: storedToken\n                });\n                // Verify token with backend (non-blocking - don't wait for this)\n                verifyToken(storedToken, storedUsername).catch(console.error);\n            } else {\n                // No stored credentials, set loading to false\n                setLoading(false);\n            }\n        }\n    }[\"AdminProvider.useEffect\"], []);\n    const verifyToken = async (token, username)=>{\n        try {\n            console.log('🔐 Verifying token for:', username);\n            const backendUrl =  false || 'http://localhost:8001';\n            console.log('🌐 Using backend URL for verification:', backendUrl);\n            const response = await fetch(\"\".concat(backendUrl, \"/api/admin/verify\"), {\n                headers: {\n                    'Authorization': \"Bearer \".concat(token),\n                    'Content-Type': 'application/json'\n                }\n            });\n            console.log('🔍 Verify response status:', response.status);\n            if (response.ok) {\n                const data = await response.json();\n                console.log('✅ Token verified successfully:', data);\n                setAdminUser({\n                    username,\n                    token\n                });\n            } else {\n                console.log('❌ Token verification failed, clearing storage');\n                // Token expired or invalid, clear storage\n                localStorage.removeItem('admin_token');\n                localStorage.removeItem('admin_username');\n                setAdminUser(null);\n            }\n        } catch (error) {\n            console.error('❌ Token verification error:', error);\n            // Don't clear storage on network errors - might be temporary\n            // Only clear if we got a 401/403 response\n            console.log('⚠️ Network error during verification, keeping token for now');\n        } finally{\n            setLoading(false);\n        }\n    };\n    const login = async (username, password)=>{\n        try {\n            console.log('🔍 Admin login attempt:', username);\n            const backendUrl =  false || 'http://localhost:8001';\n            console.log('🌐 Using backend URL:', backendUrl);\n            const response = await fetch(\"\".concat(backendUrl, \"/api/admin/login\"), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username,\n                    password\n                })\n            });\n            console.log('📡 Login response status:', response.status);\n            if (response.ok) {\n                const data = await response.json();\n                const token = data.access_token;\n                console.log('✅ Login successful, token received');\n                // Store credentials\n                localStorage.setItem('admin_token', token);\n                localStorage.setItem('admin_username', username);\n                setAdminUser({\n                    username,\n                    token\n                });\n                return true;\n            } else {\n                const errorData = await response.json().catch(()=>({}));\n                console.error('❌ Login failed:', response.status, errorData);\n            }\n            return false;\n        } catch (error) {\n            console.error('❌ Login error:', error);\n            return false;\n        }\n    };\n    const logout = ()=>{\n        localStorage.removeItem('admin_token');\n        localStorage.removeItem('admin_username');\n        setAdminUser(null);\n    };\n    const value = {\n        adminUser,\n        isAuthenticated: !!adminUser,\n        login,\n        logout,\n        loading\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AdminContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/app/frontend/src/context/AdminContext.tsx\",\n        lineNumber: 131,\n        columnNumber: 10\n    }, this);\n}\n_s(AdminProvider, \"VX9vrE7M/DWs3yS9hny3WRTpu2o=\");\n_c = AdminProvider;\nconst useAdmin = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AdminContext);\n    if (context === undefined) {\n        throw new Error('useAdmin must be used within an AdminProvider');\n    }\n    return context;\n};\n_s1(useAdmin, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AdminProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/AdminContext.tsx\n"));

/***/ })

});