"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/quiz/[category]/page",{

/***/ "(app-pages-browser)/./src/context/AdminContext.tsx":
/*!**************************************!*\
  !*** ./src/context/AdminContext.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdminProvider: () => (/* binding */ AdminProvider),\n/* harmony export */   useAdmin: () => (/* binding */ useAdmin)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ AdminProvider,useAdmin auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst AdminContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction AdminProvider(param) {\n    let { children } = param;\n    _s();\n    const [adminUser, setAdminUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // Don't block main app loading\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AdminProvider.useEffect\": ()=>{\n            // Check for stored admin token on mount\n            const storedToken = localStorage.getItem('admin_token');\n            const storedUsername = localStorage.getItem('admin_username');\n            const backendUrl =  false || 'http://localhost:8001';\n            if (storedToken && storedUsername) {\n                console.log('🔄 Found stored credentials, setting admin user immediately');\n                // Set user immediately to prevent redirect loops\n                setAdminUser({\n                    username: storedUsername,\n                    token: storedToken\n                });\n                // Verify token with backend (non-blocking - don't wait for this)\n                verifyToken(storedToken, storedUsername).catch(console.error);\n            } else {\n                // No stored credentials, set loading to false\n                setLoading(false);\n            }\n        }\n    }[\"AdminProvider.useEffect\"], []);\n    const verifyToken = async (token, username)=>{\n        try {\n            console.log('🔐 Verifying token for:', username);\n            const backendUrl =  false || 'http://localhost:8001';\n            console.log('🌐 Using backend URL for verification:', backendUrl);\n            const response = await fetch(\"\".concat(backendUrl, \"/api/admin/verify\"), {\n                headers: {\n                    'Authorization': \"Bearer \".concat(token),\n                    'Content-Type': 'application/json'\n                }\n            });\n            console.log('🔍 Verify response status:', response.status);\n            if (response.ok) {\n                const data = await response.json();\n                console.log('✅ Token verified successfully:', data);\n                setAdminUser({\n                    username,\n                    token\n                });\n            } else {\n                console.log('❌ Token verification failed, clearing storage');\n                // Token expired or invalid, clear storage\n                localStorage.removeItem('admin_token');\n                localStorage.removeItem('admin_username');\n                setAdminUser(null);\n            }\n        } catch (error) {\n            console.error('❌ Token verification error:', error);\n            // Don't clear storage on network errors - might be temporary\n            // Only clear if we got a 401/403 response\n            console.log('⚠️ Network error during verification, keeping token for now');\n        } finally{\n            setLoading(false);\n        }\n    };\n    const login = async (username, password)=>{\n        try {\n            console.log('🔍 Admin login attempt:', username);\n            const backendUrl =  false || 'http://localhost:8001';\n            console.log('🌐 Using backend URL:', backendUrl);\n            const response = await fetch(\"\".concat(backendUrl, \"/api/admin/login\"), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username,\n                    password\n                })\n            });\n            console.log('📡 Login response status:', response.status);\n            if (response.ok) {\n                const data = await response.json();\n                const token = data.access_token;\n                console.log('✅ Login successful, token received');\n                // Store credentials\n                localStorage.setItem('admin_token', token);\n                localStorage.setItem('admin_username', username);\n                setAdminUser({\n                    username,\n                    token\n                });\n                return true;\n            } else {\n                const errorData = await response.json().catch(()=>({}));\n                console.error('❌ Login failed:', response.status, errorData);\n            }\n            return false;\n        } catch (error) {\n            console.error('❌ Login error:', error);\n            return false;\n        }\n    };\n    const logout = ()=>{\n        localStorage.removeItem('admin_token');\n        localStorage.removeItem('admin_username');\n        setAdminUser(null);\n    };\n    const value = {\n        adminUser,\n        isAuthenticated: !!adminUser,\n        login,\n        logout,\n        loading\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AdminContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/app/frontend/src/context/AdminContext.tsx\",\n        lineNumber: 133,\n        columnNumber: 10\n    }, this);\n}\n_s(AdminProvider, \"VX9vrE7M/DWs3yS9hny3WRTpu2o=\");\n_c = AdminProvider;\nconst useAdmin = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AdminContext);\n    if (context === undefined) {\n        throw new Error('useAdmin must be used within an AdminProvider');\n    }\n    return context;\n};\n_s1(useAdmin, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AdminProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb250ZXh0L0FkbWluQ29udGV4dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUU4RTtBQWdCOUUsTUFBTUssNkJBQWVKLG9EQUFhQSxDQUErQks7QUFFMUQsU0FBU0MsY0FBYyxLQUEyQztRQUEzQyxFQUFFQyxRQUFRLEVBQWlDLEdBQTNDOztJQUM1QixNQUFNLENBQUNDLFdBQVdDLGFBQWEsR0FBR1AsK0NBQVFBLENBQW1CO0lBQzdELE1BQU0sQ0FBQ1EsU0FBU0MsV0FBVyxHQUFHVCwrQ0FBUUEsQ0FBQyxRQUFRLCtCQUErQjtJQUU5RUMsZ0RBQVNBO21DQUFDO1lBQ1Isd0NBQXdDO1lBQ3hDLE1BQU1TLGNBQWNDLGFBQWFDLE9BQU8sQ0FBQztZQUN6QyxNQUFNQyxpQkFBaUJGLGFBQWFDLE9BQU8sQ0FBQztZQUU1QyxNQUFNRSxhQUFhQyxNQUFtQyxJQUFJO1lBRTFELElBQUlMLGVBQWVHLGdCQUFnQjtnQkFDakNLLFFBQVFDLEdBQUcsQ0FBQztnQkFDWixpREFBaUQ7Z0JBQ2pEWixhQUFhO29CQUFFYSxVQUFVUDtvQkFBZ0JRLE9BQU9YO2dCQUFZO2dCQUU1RCxpRUFBaUU7Z0JBQ2pFWSxZQUFZWixhQUFhRyxnQkFBZ0JVLEtBQUssQ0FBQ0wsUUFBUU0sS0FBSztZQUM5RCxPQUFPO2dCQUNMLDhDQUE4QztnQkFDOUNmLFdBQVc7WUFDYjtRQUNGO2tDQUFHLEVBQUU7SUFFTCxNQUFNYSxjQUFjLE9BQU9ELE9BQWVEO1FBQ3hDLElBQUk7WUFDRkYsUUFBUUMsR0FBRyxDQUFDLDJCQUEyQkM7WUFDdkMsTUFBTU4sYUFBYUMsTUFBbUMsSUFBSTtZQUMxREcsUUFBUUMsR0FBRyxDQUFDLDBDQUEwQ0w7WUFFdEQsTUFBTVcsV0FBVyxNQUFNQyxNQUFNLEdBQWMsT0FBWFosWUFBVyxzQkFBb0I7Z0JBQzdEYSxTQUFTO29CQUNQLGlCQUFpQixVQUFnQixPQUFOTjtvQkFDM0IsZ0JBQWdCO2dCQUNsQjtZQUNGO1lBRUFILFFBQVFDLEdBQUcsQ0FBQyw4QkFBOEJNLFNBQVNHLE1BQU07WUFFekQsSUFBSUgsU0FBU0ksRUFBRSxFQUFFO2dCQUNmLE1BQU1DLE9BQU8sTUFBTUwsU0FBU00sSUFBSTtnQkFDaENiLFFBQVFDLEdBQUcsQ0FBQyxrQ0FBa0NXO2dCQUM5Q3ZCLGFBQWE7b0JBQUVhO29CQUFVQztnQkFBTTtZQUNqQyxPQUFPO2dCQUNMSCxRQUFRQyxHQUFHLENBQUM7Z0JBQ1osMENBQTBDO2dCQUMxQ1IsYUFBYXFCLFVBQVUsQ0FBQztnQkFDeEJyQixhQUFhcUIsVUFBVSxDQUFDO2dCQUN4QnpCLGFBQWE7WUFDZjtRQUNGLEVBQUUsT0FBT2lCLE9BQU87WUFDZE4sUUFBUU0sS0FBSyxDQUFDLCtCQUErQkE7WUFDN0MsNkRBQTZEO1lBQzdELDBDQUEwQztZQUMxQ04sUUFBUUMsR0FBRyxDQUFDO1FBQ2QsU0FBVTtZQUNSVixXQUFXO1FBQ2I7SUFDRjtJQUVBLE1BQU13QixRQUFRLE9BQU9iLFVBQWtCYztRQUNyQyxJQUFJO1lBQ0ZoQixRQUFRQyxHQUFHLENBQUMsMkJBQTJCQztZQUN2QyxNQUFNTixhQUFhQyxNQUFtQyxJQUFJO1lBQzFERyxRQUFRQyxHQUFHLENBQUMseUJBQXlCTDtZQUVyQyxNQUFNVyxXQUFXLE1BQU1DLE1BQU0sR0FBYyxPQUFYWixZQUFXLHFCQUFtQjtnQkFDNURxQixRQUFRO2dCQUNSUixTQUFTO29CQUNQLGdCQUFnQjtnQkFDbEI7Z0JBQ0FTLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztvQkFBRWxCO29CQUFVYztnQkFBUztZQUM1QztZQUVBaEIsUUFBUUMsR0FBRyxDQUFDLDZCQUE2Qk0sU0FBU0csTUFBTTtZQUV4RCxJQUFJSCxTQUFTSSxFQUFFLEVBQUU7Z0JBQ2YsTUFBTUMsT0FBTyxNQUFNTCxTQUFTTSxJQUFJO2dCQUNoQyxNQUFNVixRQUFRUyxLQUFLUyxZQUFZO2dCQUMvQnJCLFFBQVFDLEdBQUcsQ0FBQztnQkFFWixvQkFBb0I7Z0JBQ3BCUixhQUFhNkIsT0FBTyxDQUFDLGVBQWVuQjtnQkFDcENWLGFBQWE2QixPQUFPLENBQUMsa0JBQWtCcEI7Z0JBRXZDYixhQUFhO29CQUFFYTtvQkFBVUM7Z0JBQU07Z0JBQy9CLE9BQU87WUFDVCxPQUFPO2dCQUNMLE1BQU1vQixZQUFZLE1BQU1oQixTQUFTTSxJQUFJLEdBQUdSLEtBQUssQ0FBQyxJQUFPLEVBQUM7Z0JBQ3RETCxRQUFRTSxLQUFLLENBQUMsbUJBQW1CQyxTQUFTRyxNQUFNLEVBQUVhO1lBQ3BEO1lBQ0EsT0FBTztRQUNULEVBQUUsT0FBT2pCLE9BQU87WUFDZE4sUUFBUU0sS0FBSyxDQUFDLGtCQUFrQkE7WUFDaEMsT0FBTztRQUNUO0lBQ0Y7SUFFQSxNQUFNa0IsU0FBUztRQUNiL0IsYUFBYXFCLFVBQVUsQ0FBQztRQUN4QnJCLGFBQWFxQixVQUFVLENBQUM7UUFDeEJ6QixhQUFhO0lBQ2Y7SUFFQSxNQUFNb0MsUUFBUTtRQUNackM7UUFDQXNDLGlCQUFpQixDQUFDLENBQUN0QztRQUNuQjJCO1FBQ0FTO1FBQ0FsQztJQUNGO0lBRUEscUJBQU8sOERBQUNOLGFBQWEyQyxRQUFRO1FBQUNGLE9BQU9BO2tCQUFRdEM7Ozs7OztBQUMvQztHQWpIZ0JEO0tBQUFBO0FBbUhULE1BQU0wQyxXQUFXOztJQUN0QixNQUFNQyxVQUFVaEQsaURBQVVBLENBQUNHO0lBQzNCLElBQUk2QyxZQUFZNUMsV0FBVztRQUN6QixNQUFNLElBQUk2QyxNQUFNO0lBQ2xCO0lBQ0EsT0FBT0Q7QUFDVCxFQUFFO0lBTldEIiwic291cmNlcyI6WyIvYXBwL2Zyb250ZW5kL3NyYy9jb250ZXh0L0FkbWluQ29udGV4dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCBSZWFjdCwgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgYXBpUmVxdWVzdEpzb24sIGFwaVJlcXVlc3QgfSBmcm9tICcuLi91dGlscy9hcGknO1xuXG5pbnRlcmZhY2UgQWRtaW5Vc2VyIHtcbiAgdXNlcm5hbWU6IHN0cmluZztcbiAgdG9rZW46IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIEFkbWluQ29udGV4dFR5cGUge1xuICBhZG1pblVzZXI6IEFkbWluVXNlciB8IG51bGw7XG4gIGlzQXV0aGVudGljYXRlZDogYm9vbGVhbjtcbiAgbG9naW46ICh1c2VybmFtZTogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nKSA9PiBQcm9taXNlPGJvb2xlYW4+O1xuICBsb2dvdXQ6ICgpID0+IHZvaWQ7XG4gIGxvYWRpbmc6IGJvb2xlYW47XG59XG5cbmNvbnN0IEFkbWluQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8QWRtaW5Db250ZXh0VHlwZSB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKTtcblxuZXhwb3J0IGZ1bmN0aW9uIEFkbWluUHJvdmlkZXIoeyBjaGlsZHJlbiB9OiB7IGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGUgfSkge1xuICBjb25zdCBbYWRtaW5Vc2VyLCBzZXRBZG1pblVzZXJdID0gdXNlU3RhdGU8QWRtaW5Vc2VyIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTsgLy8gRG9uJ3QgYmxvY2sgbWFpbiBhcHAgbG9hZGluZ1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gQ2hlY2sgZm9yIHN0b3JlZCBhZG1pbiB0b2tlbiBvbiBtb3VudFxuICAgIGNvbnN0IHN0b3JlZFRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FkbWluX3Rva2VuJyk7XG4gICAgY29uc3Qgc3RvcmVkVXNlcm5hbWUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYWRtaW5fdXNlcm5hbWUnKTtcbiAgICBcbiAgICBjb25zdCBiYWNrZW5kVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQkFDS0VORF9VUkwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMSc7XG4gICAgXG4gICAgaWYgKHN0b3JlZFRva2VuICYmIHN0b3JlZFVzZXJuYW1lKSB7XG4gICAgICBjb25zb2xlLmxvZygn8J+UhCBGb3VuZCBzdG9yZWQgY3JlZGVudGlhbHMsIHNldHRpbmcgYWRtaW4gdXNlciBpbW1lZGlhdGVseScpO1xuICAgICAgLy8gU2V0IHVzZXIgaW1tZWRpYXRlbHkgdG8gcHJldmVudCByZWRpcmVjdCBsb29wc1xuICAgICAgc2V0QWRtaW5Vc2VyKHsgdXNlcm5hbWU6IHN0b3JlZFVzZXJuYW1lLCB0b2tlbjogc3RvcmVkVG9rZW4gfSk7XG4gICAgICBcbiAgICAgIC8vIFZlcmlmeSB0b2tlbiB3aXRoIGJhY2tlbmQgKG5vbi1ibG9ja2luZyAtIGRvbid0IHdhaXQgZm9yIHRoaXMpXG4gICAgICB2ZXJpZnlUb2tlbihzdG9yZWRUb2tlbiwgc3RvcmVkVXNlcm5hbWUpLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBObyBzdG9yZWQgY3JlZGVudGlhbHMsIHNldCBsb2FkaW5nIHRvIGZhbHNlXG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICB9XG4gIH0sIFtdKTtcblxuICBjb25zdCB2ZXJpZnlUb2tlbiA9IGFzeW5jICh0b2tlbjogc3RyaW5nLCB1c2VybmFtZTogc3RyaW5nKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnNvbGUubG9nKCfwn5SQIFZlcmlmeWluZyB0b2tlbiBmb3I6JywgdXNlcm5hbWUpO1xuICAgICAgY29uc3QgYmFja2VuZFVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0JBQ0tFTkRfVVJMIHx8ICdodHRwOi8vbG9jYWxob3N0OjgwMDEnO1xuICAgICAgY29uc29sZS5sb2coJ/CfjJAgVXNpbmcgYmFja2VuZCBVUkwgZm9yIHZlcmlmaWNhdGlvbjonLCBiYWNrZW5kVXJsKTtcbiAgICAgIFxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtiYWNrZW5kVXJsfS9hcGkvYWRtaW4vdmVyaWZ5YCwge1xuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyICR7dG9rZW59YCxcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBjb25zb2xlLmxvZygn8J+UjSBWZXJpZnkgcmVzcG9uc2Ugc3RhdHVzOicsIHJlc3BvbnNlLnN0YXR1cyk7XG4gICAgICBcbiAgICAgIGlmIChyZXNwb25zZS5vaykge1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICBjb25zb2xlLmxvZygn4pyFIFRva2VuIHZlcmlmaWVkIHN1Y2Nlc3NmdWxseTonLCBkYXRhKTtcbiAgICAgICAgc2V0QWRtaW5Vc2VyKHsgdXNlcm5hbWUsIHRva2VuIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coJ+KdjCBUb2tlbiB2ZXJpZmljYXRpb24gZmFpbGVkLCBjbGVhcmluZyBzdG9yYWdlJyk7XG4gICAgICAgIC8vIFRva2VuIGV4cGlyZWQgb3IgaW52YWxpZCwgY2xlYXIgc3RvcmFnZVxuICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnYWRtaW5fdG9rZW4nKTtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ2FkbWluX3VzZXJuYW1lJyk7XG4gICAgICAgIHNldEFkbWluVXNlcihudWxsKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcign4p2MIFRva2VuIHZlcmlmaWNhdGlvbiBlcnJvcjonLCBlcnJvcik7XG4gICAgICAvLyBEb24ndCBjbGVhciBzdG9yYWdlIG9uIG5ldHdvcmsgZXJyb3JzIC0gbWlnaHQgYmUgdGVtcG9yYXJ5XG4gICAgICAvLyBPbmx5IGNsZWFyIGlmIHdlIGdvdCBhIDQwMS80MDMgcmVzcG9uc2VcbiAgICAgIGNvbnNvbGUubG9nKCfimqDvuI8gTmV0d29yayBlcnJvciBkdXJpbmcgdmVyaWZpY2F0aW9uLCBrZWVwaW5nIHRva2VuIGZvciBub3cnKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGxvZ2luID0gYXN5bmMgKHVzZXJuYW1lOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+ID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc29sZS5sb2coJ/CflI0gQWRtaW4gbG9naW4gYXR0ZW1wdDonLCB1c2VybmFtZSk7XG4gICAgICBjb25zdCBiYWNrZW5kVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQkFDS0VORF9VUkwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMSc7XG4gICAgICBjb25zb2xlLmxvZygn8J+MkCBVc2luZyBiYWNrZW5kIFVSTDonLCBiYWNrZW5kVXJsKTtcbiAgICAgIFxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtiYWNrZW5kVXJsfS9hcGkvYWRtaW4vbG9naW5gLCB7XG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHVzZXJuYW1lLCBwYXNzd29yZCB9KVxuICAgICAgfSk7XG5cbiAgICAgIGNvbnNvbGUubG9nKCfwn5OhIExvZ2luIHJlc3BvbnNlIHN0YXR1czonLCByZXNwb25zZS5zdGF0dXMpO1xuICAgICAgXG4gICAgICBpZiAocmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgY29uc3QgdG9rZW4gPSBkYXRhLmFjY2Vzc190b2tlbjtcbiAgICAgICAgY29uc29sZS5sb2coJ+KchSBMb2dpbiBzdWNjZXNzZnVsLCB0b2tlbiByZWNlaXZlZCcpO1xuICAgICAgICBcbiAgICAgICAgLy8gU3RvcmUgY3JlZGVudGlhbHNcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2FkbWluX3Rva2VuJywgdG9rZW4pO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYWRtaW5fdXNlcm5hbWUnLCB1c2VybmFtZSk7XG4gICAgICAgIFxuICAgICAgICBzZXRBZG1pblVzZXIoeyB1c2VybmFtZSwgdG9rZW4gfSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgZXJyb3JEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpLmNhdGNoKCgpID0+ICh7fSkpO1xuICAgICAgICBjb25zb2xlLmVycm9yKCfinYwgTG9naW4gZmFpbGVkOicsIHJlc3BvbnNlLnN0YXR1cywgZXJyb3JEYXRhKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcign4p2MIExvZ2luIGVycm9yOicsIGVycm9yKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgbG9nb3V0ID0gKCkgPT4ge1xuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdhZG1pbl90b2tlbicpO1xuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdhZG1pbl91c2VybmFtZScpO1xuICAgIHNldEFkbWluVXNlcihudWxsKTtcbiAgfTtcblxuICBjb25zdCB2YWx1ZSA9IHtcbiAgICBhZG1pblVzZXIsXG4gICAgaXNBdXRoZW50aWNhdGVkOiAhIWFkbWluVXNlcixcbiAgICBsb2dpbixcbiAgICBsb2dvdXQsXG4gICAgbG9hZGluZ1xuICB9O1xuXG4gIHJldHVybiA8QWRtaW5Db250ZXh0LlByb3ZpZGVyIHZhbHVlPXt2YWx1ZX0+e2NoaWxkcmVufTwvQWRtaW5Db250ZXh0LlByb3ZpZGVyPjtcbn1cblxuZXhwb3J0IGNvbnN0IHVzZUFkbWluID0gKCkgPT4ge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChBZG1pbkNvbnRleHQpO1xuICBpZiAoY29udGV4dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd1c2VBZG1pbiBtdXN0IGJlIHVzZWQgd2l0aGluIGFuIEFkbWluUHJvdmlkZXInKTtcbiAgfVxuICByZXR1cm4gY29udGV4dDtcbn07Il0sIm5hbWVzIjpbIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkFkbWluQ29udGV4dCIsInVuZGVmaW5lZCIsIkFkbWluUHJvdmlkZXIiLCJjaGlsZHJlbiIsImFkbWluVXNlciIsInNldEFkbWluVXNlciIsImxvYWRpbmciLCJzZXRMb2FkaW5nIiwic3RvcmVkVG9rZW4iLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwic3RvcmVkVXNlcm5hbWUiLCJiYWNrZW5kVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0JBQ0tFTkRfVVJMIiwiY29uc29sZSIsImxvZyIsInVzZXJuYW1lIiwidG9rZW4iLCJ2ZXJpZnlUb2tlbiIsImNhdGNoIiwiZXJyb3IiLCJyZXNwb25zZSIsImZldGNoIiwiaGVhZGVycyIsInN0YXR1cyIsIm9rIiwiZGF0YSIsImpzb24iLCJyZW1vdmVJdGVtIiwibG9naW4iLCJwYXNzd29yZCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiYWNjZXNzX3Rva2VuIiwic2V0SXRlbSIsImVycm9yRGF0YSIsImxvZ291dCIsInZhbHVlIiwiaXNBdXRoZW50aWNhdGVkIiwiUHJvdmlkZXIiLCJ1c2VBZG1pbiIsImNvbnRleHQiLCJFcnJvciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/AdminContext.tsx\n"));

/***/ })

});