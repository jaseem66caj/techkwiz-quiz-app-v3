/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/_not-found/page";
exports.ids = ["app/_not-found/page"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2F_not-found%2Fpage&page=%2F_not-found%2Fpage&appPaths=&pagePath=%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-not-found.js&appDir=%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2F_not-found%2Fpage&page=%2F_not-found%2Fpage&appPaths=&pagePath=%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-not-found.js&appDir=%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/module.compiled.js?cc4a\");\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/app-render/interop-default */ \"(rsc)/./node_modules/next/dist/server/app-render/interop-default.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/experimental/ppr */ \"(rsc)/./node_modules/next/dist/server/lib/experimental/ppr.js\");\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/request/fallback-params */ \"(rsc)/./node_modules/next/dist/server/request/fallback-params.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/app-render/encryption-utils */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption-utils.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/lib/streaming-metadata */ \"(rsc)/./node_modules/next/dist/server/lib/streaming-metadata.js\");\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/app-render/action-utils */ \"(rsc)/./node_modules/next/dist/server/app-render/action-utils.js\");\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/server/lib/server-action-request-meta */ \"(rsc)/./node_modules/next/dist/server/lib/server-action-request-meta.js\");\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/client/components/app-router-headers */ \"(rsc)/./node_modules/next/dist/client/components/app-router-headers.js\");\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/is-bot */ \"next/dist/shared/lib/router/utils/is-bot\");\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! next/dist/lib/fallback */ \"(rsc)/./node_modules/next/dist/lib/fallback.js\");\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! next/dist/server/render-result */ \"(rsc)/./node_modules/next/dist/server/render-result.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! next/dist/server/stream-utils/encoded-tags */ \"(rsc)/./node_modules/next/dist/server/stream-utils/encoded-tags.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! next/dist/server/send-payload */ \"(rsc)/./node_modules/next/dist/server/send-payload.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\");\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__);\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! next/dist/client/components/redirect-status-code */ \"(rsc)/./node_modules/next/dist/client/components/redirect-status-code.js\");\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"__next_app__\",\"routeModule\",\"handler\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nconst notFound0 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/not-found.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/not-found.js\", 23));\nconst module1 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\"));\nconst module2 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\nconst module3 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/forbidden.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/forbidden.js\", 23));\nconst module4 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/unauthorized.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/unauthorized.js\", 23));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n              children: [\"/_not-found\", {\n                children: ['__PAGE__', {}, {\n                  page: [\n                    notFound0,\n                    \"next/dist/client/components/builtin/not-found.js\"\n                  ]\n                }]\n              }, {}]\n            },\n        {\n        'layout': [module1, \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/app/layout.tsx\"],\n'global-error': [module2, \"next/dist/client/components/builtin/global-error.js\"],\n'forbidden': [module3, \"next/dist/client/components/builtin/forbidden.js\"],\n'unauthorized': [module4, \"next/dist/client/components/builtin/unauthorized.js\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [];\n\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/_not-found/page\",\n        pathname: \"/_not-found\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    var _this;\n    let srcPage = \"/_not-found/page\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const initialPostponed = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'postponed');\n    // TODO: replace with more specific flags\n    const minimalMode = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'minimalMode');\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, query, params, parsedUrl, pageIsDynamic, buildManifest, nextFontManifest, reactLoadableManifest, serverActionsManifest, clientReferenceManifest, subresourceIntegrityManifest, prerenderManifest, isDraftMode, resolvedPathname, revalidateOnlyGenerated, routerServerContext, nextConfig } = prepareResult;\n    const pathname = parsedUrl.pathname || '/';\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13__.normalizeAppPath)(srcPage);\n    let { isOnDemandRevalidate } = prepareResult;\n    const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n    const isPrerendered = prerenderManifest.routes[resolvedPathname];\n    let isSSG = Boolean(prerenderInfo || isPrerendered || prerenderManifest.routes[normalizedSrcPage]);\n    const userAgent = req.headers['user-agent'] || '';\n    const botType = (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__.getBotType)(userAgent);\n    const isHtmlBot = (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__.isHtmlBotRequest)(req);\n    /**\n   * If true, this indicates that the request being made is for an app\n   * prefetch request.\n   */ const isPrefetchRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isPrefetchRSCRequest') ?? Boolean(req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_ROUTER_PREFETCH_HEADER]);\n    // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n    const isRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isRSCRequest') ?? Boolean(req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.RSC_HEADER]);\n    const isPossibleServerAction = (0,next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14__.getIsPossibleServerAction)(req);\n    /**\n   * If the route being rendered is an app page, and the ppr feature has been\n   * enabled, then the given route _could_ support PPR.\n   */ const couldSupportPPR = (0,next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8__.checkIsAppPPREnabled)(nextConfig.experimental.ppr);\n    // When enabled, this will allow the use of the `?__nextppronly` query to\n    // enable debugging of the static shell.\n    const hasDebugStaticShellQuery =  false && 0;\n    // When enabled, this will allow the use of the `?__nextppronly` query\n    // to enable debugging of the fallback shell.\n    const hasDebugFallbackShellQuery = hasDebugStaticShellQuery && query.__nextppronly === 'fallback';\n    // This page supports PPR if it is marked as being `PARTIALLY_STATIC` in the\n    // prerender manifest and this is an app page.\n    const isRoutePPREnabled = couldSupportPPR && (((_this = prerenderManifest.routes[normalizedSrcPage] ?? prerenderManifest.dynamicRoutes[normalizedSrcPage]) == null ? void 0 : _this.renderingMode) === 'PARTIALLY_STATIC' || // Ideally we'd want to check the appConfig to see if this page has PPR\n    // enabled or not, but that would require plumbing the appConfig through\n    // to the server during development. We assume that the page supports it\n    // but only during development.\n    hasDebugStaticShellQuery && (routeModule.isDev === true || (routerServerContext == null ? void 0 : routerServerContext.experimentalTestProxy) === true));\n    const isDebugStaticShell = hasDebugStaticShellQuery && isRoutePPREnabled;\n    // We should enable debugging dynamic accesses when the static shell\n    // debugging has been enabled and we're also in development mode.\n    const isDebugDynamicAccesses = isDebugStaticShell && routeModule.isDev === true;\n    const isDebugFallbackShell = hasDebugFallbackShellQuery && isRoutePPREnabled;\n    // If we're in minimal mode, then try to get the postponed information from\n    // the request metadata. If available, use it for resuming the postponed\n    // render.\n    const minimalPostponed = isRoutePPREnabled ? initialPostponed : undefined;\n    // If PPR is enabled, and this is a RSC request (but not a prefetch), then\n    // we can use this fact to only generate the flight data for the request\n    // because we can't cache the HTML (as it's also dynamic).\n    const isDynamicRSCRequest = isRoutePPREnabled && isRSCRequest && !isPrefetchRSCRequest;\n    // Need to read this before it's stripped by stripFlightHeaders. We don't\n    // need to transfer it to the request meta because it's only read\n    // within this function; the static segment data should have already been\n    // generated, so we will always either return a static response or a 404.\n    const segmentPrefetchHeader = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'segmentPrefetchRSCRequest');\n    // TODO: investigate existing bug with shouldServeStreamingMetadata always\n    // being true for a revalidate due to modifying the base-server this.renderOpts\n    // when fixing this to correct logic it causes hydration issue since we set\n    // serveStreamingMetadata to true during export\n    let serveStreamingMetadata = !userAgent ? true : (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__.shouldServeStreamingMetadata)(userAgent, nextConfig.htmlLimitedBots);\n    if (isHtmlBot && isRoutePPREnabled) {\n        isSSG = false;\n        serveStreamingMetadata = false;\n    }\n    // In development, we always want to generate dynamic HTML.\n    let supportsDynamicResponse = // If we're in development, we always support dynamic HTML, unless it's\n    // a data request, in which case we only produce static HTML.\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isSSG || // If this request has provided postponed data, it supports dynamic\n    // HTML.\n    typeof initialPostponed === 'string' || // If this is a dynamic RSC request, then this render supports dynamic\n    // HTML (it's dynamic).\n    isDynamicRSCRequest;\n    // When html bots request PPR page, perform the full dynamic rendering.\n    const shouldWaitOnAllReady = isHtmlBot && isRoutePPREnabled;\n    let ssgCacheKey = null;\n    if (!isDraftMode && isSSG && !supportsDynamicResponse && !isPossibleServerAction && !minimalPostponed && !isDynamicRSCRequest) {\n        ssgCacheKey = resolvedPathname;\n    }\n    // the staticPathKey differs from ssgCacheKey since\n    // ssgCacheKey is null in dev since we're always in \"dynamic\"\n    // mode in dev to bypass the cache, but we still need to honor\n    // dynamicParams = false in dev mode\n    let staticPathKey = ssgCacheKey;\n    if (!staticPathKey && routeModule.isDev) {\n        staticPathKey = resolvedPathname;\n    }\n    const ComponentMod = {\n        ...next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__,\n        tree,\n        pages,\n        GlobalError: (next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24___default()),\n        handler,\n        routeModule,\n        __next_app__\n    };\n    // Before rendering (which initializes component tree modules), we have to\n    // set the reference manifests to our global store so Server Action's\n    // encryption util can access to them at the top level of the page module.\n    if (serverActionsManifest && clientReferenceManifest) {\n        (0,next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10__.setReferenceManifestsSingleton)({\n            page: srcPage,\n            clientReferenceManifest,\n            serverActionsManifest,\n            serverModuleMap: (0,next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12__.createServerModuleMap)({\n                serverActionsManifest\n            })\n        });\n    }\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    try {\n        const invokeRouteModule = async (span, context)=>{\n            const nextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__.NodeNextRequest(req);\n            const nextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__.NodeNextResponse(res);\n            // TODO: adapt for putting the RDC inside the postponed data\n            // If we're in dev, and this isn't a prefetch or a server action,\n            // we should seed the resume data cache.\n            if (true) {\n                if (nextConfig.experimental.dynamicIO && !isPrefetchRSCRequest && !context.renderOpts.isPossibleServerAction) {\n                    const warmup = await routeModule.warmup(nextReq, nextRes, context);\n                    // If the warmup is successful, we should use the resume data\n                    // cache from the warmup.\n                    if (warmup.metadata.renderResumeDataCache) {\n                        context.renderOpts.renderResumeDataCache = warmup.metadata.renderResumeDataCache;\n                    }\n                }\n            }\n            return routeModule.render(nextReq, nextRes, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const doRender = async ({ span, postponed, fallbackRouteParams })=>{\n            const context = {\n                query,\n                params,\n                page: normalizedSrcPage,\n                sharedContext: {\n                    buildId\n                },\n                serverComponentsHmrCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'serverComponentsHmrCache'),\n                fallbackRouteParams,\n                renderOpts: {\n                    App: ()=>null,\n                    Document: ()=>null,\n                    pageConfig: {},\n                    ComponentMod,\n                    Component: (0,next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__.interopDefault)(ComponentMod),\n                    params,\n                    routeModule,\n                    page: srcPage,\n                    postponed,\n                    shouldWaitOnAllReady,\n                    serveStreamingMetadata,\n                    supportsDynamicResponse: typeof postponed === 'string' || supportsDynamicResponse,\n                    buildManifest,\n                    nextFontManifest,\n                    reactLoadableManifest,\n                    subresourceIntegrityManifest,\n                    serverActionsManifest,\n                    clientReferenceManifest,\n                    setIsrStatus: routerServerContext == null ? void 0 : routerServerContext.setIsrStatus,\n                    dir: routeModule.projectDir,\n                    isDraftMode,\n                    isRevalidate: isSSG && !postponed && !isDynamicRSCRequest,\n                    botType,\n                    isOnDemandRevalidate,\n                    isPossibleServerAction,\n                    assetPrefix: nextConfig.assetPrefix,\n                    nextConfigOutput: nextConfig.output,\n                    crossOrigin: nextConfig.crossOrigin,\n                    trailingSlash: nextConfig.trailingSlash,\n                    previewProps: prerenderManifest.preview,\n                    deploymentId: nextConfig.deploymentId,\n                    enableTainting: nextConfig.experimental.taint,\n                    htmlLimitedBots: nextConfig.htmlLimitedBots,\n                    devtoolSegmentExplorer: nextConfig.experimental.devtoolSegmentExplorer,\n                    reactMaxHeadersLength: nextConfig.reactMaxHeadersLength,\n                    multiZoneDraftMode,\n                    incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'incrementalCache'),\n                    cacheLifeProfiles: nextConfig.experimental.cacheLife,\n                    basePath: nextConfig.basePath,\n                    serverActions: nextConfig.experimental.serverActions,\n                    ...isDebugStaticShell || isDebugDynamicAccesses ? {\n                        nextExport: true,\n                        supportsDynamicResponse: false,\n                        isStaticGeneration: true,\n                        isRevalidate: true,\n                        isDebugDynamicAccesses: isDebugDynamicAccesses\n                    } : {},\n                    experimental: {\n                        isRoutePPREnabled,\n                        expireTime: nextConfig.expireTime,\n                        staleTimes: nextConfig.experimental.staleTimes,\n                        dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                        clientSegmentCache: Boolean(nextConfig.experimental.clientSegmentCache),\n                        dynamicOnHover: Boolean(nextConfig.experimental.dynamicOnHover),\n                        inlineCss: Boolean(nextConfig.experimental.inlineCss),\n                        authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n                        clientTraceMetadata: nextConfig.experimental.clientTraceMetadata || []\n                    },\n                    waitUntil: ctx.waitUntil,\n                    onClose: (cb)=>{\n                        res.on('close', cb);\n                    },\n                    onAfterTaskError: ()=>{},\n                    onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext),\n                    err: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'invokeError'),\n                    dev: routeModule.isDev\n                }\n            };\n            const result = await invokeRouteModule(span, context);\n            const { metadata } = result;\n            const { cacheControl, headers = {}, // Add any fetch tags that were on the page to the response headers.\n            fetchTags: cacheTags } = metadata;\n            if (cacheTags) {\n                headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n            }\n            // Pull any fetch metrics from the render onto the request.\n            ;\n            req.fetchMetrics = metadata.fetchMetrics;\n            // we don't throw static to dynamic errors in dev as isSSG\n            // is a best guess in dev since we don't have the prerender pass\n            // to know whether the path is actually static or not\n            if (isSSG && (cacheControl == null ? void 0 : cacheControl.revalidate) === 0 && !routeModule.isDev && !isRoutePPREnabled) {\n                const staticBailoutInfo = metadata.staticBailoutInfo;\n                const err = Object.defineProperty(new Error(`Page changed from static to dynamic at runtime ${resolvedPathname}${(staticBailoutInfo == null ? void 0 : staticBailoutInfo.description) ? `, reason: ${staticBailoutInfo.description}` : ``}` + `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E132\",\n                    enumerable: false,\n                    configurable: true\n                });\n                if (staticBailoutInfo == null ? void 0 : staticBailoutInfo.stack) {\n                    const stack = staticBailoutInfo.stack;\n                    err.stack = err.message + stack.substring(stack.indexOf('\\n'));\n                }\n                throw err;\n            }\n            return {\n                value: {\n                    kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE,\n                    html: result,\n                    headers,\n                    rscData: metadata.flightData,\n                    postponed: metadata.postponed,\n                    status: metadata.statusCode,\n                    segmentData: metadata.segmentData\n                },\n                cacheControl\n            };\n        };\n        const responseGenerator = async ({ hasResolved, previousCacheEntry, isRevalidating, span })=>{\n            const isProduction = routeModule.isDev === false;\n            const didRespond = hasResolved || res.writableEnded;\n            // skip on-demand revalidate if cache is not present and\n            // revalidate-if-generated is set\n            if (isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry && !minimalMode) {\n                if (routerServerContext == null ? void 0 : routerServerContext.render404) {\n                    await routerServerContext.render404(req, res);\n                } else {\n                    res.statusCode = 404;\n                    res.end('This page could not be found');\n                }\n                return null;\n            }\n            let fallbackMode;\n            if (prerenderInfo) {\n                fallbackMode = (0,next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.parseFallbackField)(prerenderInfo.fallback);\n            }\n            // When serving a bot request, we want to serve a blocking render and not\n            // the prerendered page. This ensures that the correct content is served\n            // to the bot in the head.\n            if (fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.PRERENDER && (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__.isBot)(userAgent)) {\n                fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            if ((previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) === -1) {\n                isOnDemandRevalidate = true;\n            }\n            // TODO: adapt for PPR\n            // only allow on-demand revalidate for fallback: true/blocking\n            // or for prerendered fallback: false paths\n            if (isOnDemandRevalidate && (fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.NOT_FOUND || previousCacheEntry)) {\n                fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            if (!minimalMode && fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.BLOCKING_STATIC_RENDER && staticPathKey && !didRespond && !isDraftMode && pageIsDynamic && (isProduction || !isPrerendered)) {\n                // if the page has dynamicParams: false and this pathname wasn't\n                // prerendered trigger the no fallback handling\n                if (// In development, fall through to render to handle missing\n                // getStaticPaths.\n                (isProduction || prerenderInfo) && // When fallback isn't present, abort this render so we 404\n                fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.NOT_FOUND) {\n                    throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__.NoFallbackError();\n                }\n                let fallbackResponse;\n                if (isRoutePPREnabled && !isRSCRequest) {\n                    // We use the response cache here to handle the revalidation and\n                    // management of the fallback shell.\n                    fallbackResponse = await routeModule.handleResponse({\n                        cacheKey: isProduction ? normalizedSrcPage : null,\n                        req,\n                        nextConfig,\n                        routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                        isFallback: true,\n                        prerenderManifest,\n                        isRoutePPREnabled,\n                        responseGenerator: async ()=>doRender({\n                                span,\n                                // We pass `undefined` as rendering a fallback isn't resumed\n                                // here.\n                                postponed: undefined,\n                                fallbackRouteParams: // If we're in production or we're debugging the fallback\n                                // shell then we should postpone when dynamic params are\n                                // accessed.\n                                isProduction || isDebugFallbackShell ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_9__.getFallbackRouteParams)(normalizedSrcPage) : null\n                            }),\n                        waitUntil: ctx.waitUntil\n                    });\n                    // If the fallback response was set to null, then we should return null.\n                    if (fallbackResponse === null) return null;\n                    // Otherwise, if we did get a fallback response, we should return it.\n                    if (fallbackResponse) {\n                        // Remove the cache control from the response to prevent it from being\n                        // used in the surrounding cache.\n                        delete fallbackResponse.cacheControl;\n                        return fallbackResponse;\n                    }\n                }\n            }\n            // Only requests that aren't revalidating can be resumed. If we have the\n            // minimal postponed data, then we should resume the render with it.\n            const postponed = !isOnDemandRevalidate && !isRevalidating && minimalPostponed ? minimalPostponed : undefined;\n            // When we're in minimal mode, if we're trying to debug the static shell,\n            // we should just return nothing instead of resuming the dynamic render.\n            if ((isDebugStaticShell || isDebugDynamicAccesses) && typeof postponed !== 'undefined') {\n                return {\n                    cacheControl: {\n                        revalidate: 1,\n                        expire: undefined\n                    },\n                    value: {\n                        kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.PAGES,\n                        html: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(''),\n                        pageData: {},\n                        headers: undefined,\n                        status: undefined\n                    }\n                };\n            }\n            // If this is a dynamic route with PPR enabled and the default route\n            // matches were set, then we should pass the fallback route params to\n            // the renderer as this is a fallback revalidation request.\n            const fallbackRouteParams = pageIsDynamic && isRoutePPREnabled && ((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'renderFallbackShell') || isDebugFallbackShell) ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_9__.getFallbackRouteParams)(pathname) : null;\n            // Perform the render.\n            return doRender({\n                span,\n                postponed,\n                fallbackRouteParams\n            });\n        };\n        const handleResponse = async (span)=>{\n            var _cacheEntry_value, _cachedData_headers;\n            const cacheEntry = await routeModule.handleResponse({\n                cacheKey: ssgCacheKey,\n                responseGenerator: (c)=>responseGenerator({\n                        span,\n                        ...c\n                    }),\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                isOnDemandRevalidate,\n                isRoutePPREnabled,\n                req,\n                nextConfig,\n                prerenderManifest,\n                waitUntil: ctx.waitUntil\n            });\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            // In dev, we should not cache pages for any reason.\n            if (routeModule.isDev) {\n                res.setHeader('Cache-Control', 'no-store, must-revalidate');\n            }\n            if (!cacheEntry) {\n                if (ssgCacheKey) {\n                    // A cache entry might not be generated if a response is written\n                    // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n                    // have a cache key. If we do have a cache key but we don't end up\n                    // with a cache entry, then either Next.js or the application has a\n                    // bug that needs fixing.\n                    throw Object.defineProperty(new Error('invariant: cache entry required but not generated'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E62\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                return null;\n            }\n            if (((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant app-page handler received invalid cache entry ${(_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E707\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            const didPostpone = typeof cacheEntry.value.postponed === 'string';\n            if (isSSG && // We don't want to send a cache header for requests that contain dynamic\n            // data. If this is a Dynamic RSC request or wasn't a Prefetch RSC\n            // request, then we should set the cache header.\n            !isDynamicRSCRequest && (!didPostpone || isPrefetchRSCRequest)) {\n                if (!minimalMode) {\n                    // set x-nextjs-cache header to match the header\n                    // we set for the image-optimizer\n                    res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n                }\n                // Set a header used by the client router to signal the response is static\n                // and should respect the `static` cache staleTime value.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_IS_PRERENDER_HEADER, '1');\n            }\n            const { value: cachedData } = cacheEntry;\n            // Coerce the cache control parameter from the render.\n            let cacheControl;\n            // If this is a resume request in minimal mode it is streamed with dynamic\n            // content and should not be cached.\n            if (minimalPostponed) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (minimalMode && isRSCRequest && !isPrefetchRSCRequest && isRoutePPREnabled) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (!routeModule.isDev) {\n                // If this is a preview mode request, we shouldn't cache it\n                if (isDraftMode) {\n                    cacheControl = {\n                        revalidate: 0,\n                        expire: undefined\n                    };\n                } else if (!isSSG) {\n                    if (!res.getHeader('Cache-Control')) {\n                        cacheControl = {\n                            revalidate: 0,\n                            expire: undefined\n                        };\n                    }\n                } else if (cacheEntry.cacheControl) {\n                    // If the cache entry has a cache control with a revalidate value that's\n                    // a number, use it.\n                    if (typeof cacheEntry.cacheControl.revalidate === 'number') {\n                        var _cacheEntry_cacheControl;\n                        if (cacheEntry.cacheControl.revalidate < 1) {\n                            throw Object.defineProperty(new Error(`Invalid revalidate configuration provided: ${cacheEntry.cacheControl.revalidate} < 1`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E22\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        cacheControl = {\n                            revalidate: cacheEntry.cacheControl.revalidate,\n                            expire: ((_cacheEntry_cacheControl = cacheEntry.cacheControl) == null ? void 0 : _cacheEntry_cacheControl.expire) ?? nextConfig.expireTime\n                        };\n                    } else {\n                        cacheControl = {\n                            revalidate: next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.CACHE_ONE_YEAR,\n                            expire: undefined\n                        };\n                    }\n                }\n            }\n            cacheEntry.cacheControl = cacheControl;\n            if (typeof segmentPrefetchHeader === 'string' && (cachedData == null ? void 0 : cachedData.kind) === next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE && cachedData.segmentData) {\n                var _cachedData_headers1;\n                // This is a prefetch request issued by the client Segment Cache. These\n                // should never reach the application layer (lambda). We should either\n                // respond from the cache (HIT) or respond with 204 No Content (MISS).\n                // Set a header to indicate that PPR is enabled for this route. This\n                // lets the client distinguish between a regular cache miss and a cache\n                // miss due to PPR being disabled. In other contexts this header is used\n                // to indicate that the response contains dynamic data, but here we're\n                // only using it to indicate that the feature is enabled — the segment\n                // response itself contains whether the data is dynamic.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_DID_POSTPONE_HEADER, '2');\n                // Add the cache tags header to the response if it exists and we're in\n                // minimal mode while rendering a static page.\n                const tags = (_cachedData_headers1 = cachedData.headers) == null ? void 0 : _cachedData_headers1[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER];\n                if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                    res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER, tags);\n                }\n                const matchedSegment = cachedData.segmentData.get(segmentPrefetchHeader);\n                if (matchedSegment !== undefined) {\n                    // Cache hit\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                        req,\n                        res,\n                        type: 'rsc',\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(matchedSegment),\n                        cacheControl: cacheEntry.cacheControl\n                    });\n                }\n                // Cache miss. Either a cache entry for this route has not been generated\n                // (which technically should not be possible when PPR is enabled, because\n                // at a minimum there should always be a fallback entry) or there's no\n                // match for the requested segment. Respond with a 204 No Content. We\n                // don't bother to respond with 404, because these requests are only\n                // issued as part of a prefetch.\n                res.statusCode = 204;\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'rsc',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(''),\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If there's a callback for `onCacheEntry`, call it with the cache entry\n            // and the revalidate options.\n            const onCacheEntry = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'onCacheEntry');\n            if (onCacheEntry) {\n                const finished = await onCacheEntry({\n                    ...cacheEntry,\n                    // TODO: remove this when upstream doesn't\n                    // always expect this value to be \"PAGE\"\n                    value: {\n                        ...cacheEntry.value,\n                        kind: 'PAGE'\n                    }\n                }, {\n                    url: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'initURL')\n                });\n                if (finished) {\n                    // TODO: maybe we have to end the request?\n                    return null;\n                }\n            }\n            // If the request has a postponed state and it's a resume request we\n            // should error.\n            if (didPostpone && minimalPostponed) {\n                throw Object.defineProperty(new Error('Invariant: postponed state should not be present on a resume request'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E396\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (cachedData.headers) {\n                const headers = {\n                    ...cachedData.headers\n                };\n                if (!minimalMode || !isSSG) {\n                    delete headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER];\n                }\n                for (let [key, value] of Object.entries(headers)){\n                    if (typeof value === 'undefined') continue;\n                    if (Array.isArray(value)) {\n                        for (const v of value){\n                            res.appendHeader(key, v);\n                        }\n                    } else if (typeof value === 'number') {\n                        value = value.toString();\n                        res.appendHeader(key, value);\n                    } else {\n                        res.appendHeader(key, value);\n                    }\n                }\n            }\n            // Add the cache tags header to the response if it exists and we're in\n            // minimal mode while rendering a static page.\n            const tags = (_cachedData_headers = cachedData.headers) == null ? void 0 : _cachedData_headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER];\n            if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER, tags);\n            }\n            // If the request is a data request, then we shouldn't set the status code\n            // from the response because it should always be 200. This should be gated\n            // behind the experimental PPR flag.\n            if (cachedData.status && (!isRSCRequest || !isRoutePPREnabled)) {\n                res.statusCode = cachedData.status;\n            }\n            // Redirect information is encoded in RSC payload, so we don't need to use redirect status codes\n            if (!minimalMode && cachedData.status && next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26__.RedirectStatusCode[cachedData.status] && isRSCRequest) {\n                res.statusCode = 200;\n            }\n            // Mark that the request did postpone.\n            if (didPostpone) {\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_DID_POSTPONE_HEADER, '1');\n            }\n            // we don't go through this block when preview mode is true\n            // as preview mode is a dynamic request (bypasses cache) and doesn't\n            // generate both HTML and payloads in the same request so continue to just\n            // return the generated payload\n            if (isRSCRequest && !isDraftMode) {\n                // If this is a dynamic RSC request, then stream the response.\n                if (typeof cachedData.rscData === 'undefined') {\n                    if (cachedData.postponed) {\n                        throw Object.defineProperty(new Error('Invariant: Expected postponed to be undefined'), \"__NEXT_ERROR_CODE\", {\n                            value: \"E372\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                        req,\n                        res,\n                        type: 'rsc',\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: cachedData.html,\n                        // Dynamic RSC responses cannot be cached, even if they're\n                        // configured with `force-static` because we have no way of\n                        // distinguishing between `force-static` and pages that have no\n                        // postponed state.\n                        // TODO: distinguish `force-static` from pages with no postponed state (static)\n                        cacheControl: isDynamicRSCRequest ? {\n                            revalidate: 0,\n                            expire: undefined\n                        } : cacheEntry.cacheControl\n                    });\n                }\n                // As this isn't a prefetch request, we should serve the static flight\n                // data.\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'rsc',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(cachedData.rscData),\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // This is a request for HTML data.\n            let body = cachedData.html;\n            // If there's no postponed state, we should just serve the HTML. This\n            // should also be the case for a resume request because it's completed\n            // as a server render (rather than a static render).\n            if (!didPostpone || minimalMode) {\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'html',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If we're debugging the static shell or the dynamic API accesses, we\n            // should just serve the HTML without resuming the render. The returned\n            // HTML will be the static shell so all the Dynamic API's will be used\n            // during static generation.\n            if (isDebugStaticShell || isDebugDynamicAccesses) {\n                // Since we're not resuming the render, we need to at least add the\n                // closing body and html tags to create valid HTML.\n                body.chain(new ReadableStream({\n                    start (controller) {\n                        controller.enqueue(next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_21__.ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n                        controller.close();\n                    }\n                }));\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'html',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: {\n                        revalidate: 0,\n                        expire: undefined\n                    }\n                });\n            }\n            // This request has postponed, so let's create a new transformer that the\n            // dynamic data can pipe to that will attach the dynamic data to the end\n            // of the response.\n            const transformer = new TransformStream();\n            body.chain(transformer.readable);\n            // Perform the render again, but this time, provide the postponed state.\n            // We don't await because we want the result to start streaming now, and\n            // we've already chained the transformer's readable to the render result.\n            doRender({\n                span,\n                postponed: cachedData.postponed,\n                // This is a resume render, not a fallback render, so we don't need to\n                // set this.\n                fallbackRouteParams: null\n            }).then(async (result)=>{\n                var _result_value;\n                if (!result) {\n                    throw Object.defineProperty(new Error('Invariant: expected a result to be returned'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E463\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                if (((_result_value = result.value) == null ? void 0 : _result_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE) {\n                    var _result_value1;\n                    throw Object.defineProperty(new Error(`Invariant: expected a page response, got ${(_result_value1 = result.value) == null ? void 0 : _result_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E305\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // Pipe the resume result to the transformer.\n                await result.value.html.pipeTo(transformer.writable);\n            }).catch((err)=>{\n                // An error occurred during piping or preparing the render, abort\n                // the transformers writer so we can terminate the stream.\n                transformer.writable.abort(err).catch((e)=>{\n                    console.error(\"couldn't abort transformer\", e);\n                });\n            });\n            return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                req,\n                res,\n                type: 'html',\n                generateEtags: nextConfig.generateEtags,\n                poweredByHeader: nextConfig.poweredByHeader,\n                result: body,\n                // We don't want to cache the response if it has postponed data because\n                // the response being sent to the client it's dynamic parts are streamed\n                // to the client on the same request.\n                cacheControl: {\n                    revalidate: 0,\n                    expire: undefined\n                }\n            });\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            return await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: srcPage,\n                routeType: 'render',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__.getRevalidateReason)({\n                    isRevalidate: isSSG,\n                    isOnDemandRevalidate\n                })\n            }, routerServerContext);\n        }\n        // rethrow so that we can handle serving error page\n        throw err;\n    }\n}\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2F_not-found%2Fpage&page=%2F_not-found%2Fpage&appPaths=&pagePath=%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-not-found.js&appDir=%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(rsc)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(rsc)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(rsc)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(rsc)/./node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/metadata-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/metadata/metadata-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(rsc)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(rsc)/./node_modules/next/dist/lib/metadata/generate/icon-mark.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(rsc)/./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGamFzZWVtJTJGRG9jdW1lbnRzJTJGR2l0SHViJTJGVGVjaGt3aXotdjclMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmJ1aWx0aW4lMkZnbG9iYWwtZXJyb3IuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZqYXNlZW0lMkZEb2N1bWVudHMlMkZHaXRIdWIlMkZUZWNoa3dpei12NyUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZqYXNlZW0lMkZEb2N1bWVudHMlMkZHaXRIdWIlMkZUZWNoa3dpei12NyUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZqYXNlZW0lMkZEb2N1bWVudHMlMkZHaXRIdWIlMkZUZWNoa3dpei12NyUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGaHR0cC1hY2Nlc3MtZmFsbGJhY2slMkZlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRmphc2VlbSUyRkRvY3VtZW50cyUyRkdpdEh1YiUyRlRlY2hrd2l6LXY3JTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZsYXlvdXQtcm91dGVyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGamFzZWVtJTJGRG9jdW1lbnRzJTJGR2l0SHViJTJGVGVjaGt3aXotdjclMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRm1ldGFkYXRhJTJGYXN5bmMtbWV0YWRhdGEuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZqYXNlZW0lMkZEb2N1bWVudHMlMkZHaXRIdWIlMkZUZWNoa3dpei12NyUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGbWV0YWRhdGElMkZtZXRhZGF0YS1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRmphc2VlbSUyRkRvY3VtZW50cyUyRkdpdEh1YiUyRlRlY2hrd2l6LXY3JTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGamFzZWVtJTJGRG9jdW1lbnRzJTJGR2l0SHViJTJGVGVjaGt3aXotdjclMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGbGliJTJGbWV0YWRhdGElMkZnZW5lcmF0ZSUyRmljb24tbWFyay5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRmphc2VlbSUyRkRvY3VtZW50cyUyRkdpdEh1YiUyRlRlY2hrd2l6LXY3JTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRm5leHQtZGV2dG9vbHMlMkZ1c2Vyc3BhY2UlMkZhcHAlMkZzZWdtZW50LWV4cGxvcmVyLW5vZGUuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLHNQQUF5SjtBQUN6SjtBQUNBLG9PQUFnSjtBQUNoSjtBQUNBLDBPQUFtSjtBQUNuSjtBQUNBLG9SQUF3SztBQUN4SztBQUNBLHdPQUFrSjtBQUNsSjtBQUNBLDRQQUE0SjtBQUM1SjtBQUNBLGtRQUErSjtBQUMvSjtBQUNBLHNRQUFpSztBQUNqSztBQUNBLHdPQUFrSjtBQUNsSjtBQUNBLDRRQUFvSyIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2phc2VlbS9Eb2N1bWVudHMvR2l0SHViL1RlY2hrd2l6LXY3L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvYnVpbHRpbi9nbG9iYWwtZXJyb3IuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9qYXNlZW0vRG9jdW1lbnRzL0dpdEh1Yi9UZWNoa3dpei12Ny9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2NsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvamFzZWVtL0RvY3VtZW50cy9HaXRIdWIvVGVjaGt3aXotdjcvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9jbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2phc2VlbS9Eb2N1bWVudHMvR2l0SHViL1RlY2hrd2l6LXY3L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvaHR0cC1hY2Nlc3MtZmFsbGJhY2svZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9qYXNlZW0vRG9jdW1lbnRzL0dpdEh1Yi9UZWNoa3dpei12Ny9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2xheW91dC1yb3V0ZXIuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9qYXNlZW0vRG9jdW1lbnRzL0dpdEh1Yi9UZWNoa3dpei12Ny9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL21ldGFkYXRhL2FzeW5jLW1ldGFkYXRhLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvamFzZWVtL0RvY3VtZW50cy9HaXRIdWIvVGVjaGt3aXotdjcvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9tZXRhZGF0YS9tZXRhZGF0YS1ib3VuZGFyeS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2phc2VlbS9Eb2N1bWVudHMvR2l0SHViL1RlY2hrd2l6LXY3L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvcmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2phc2VlbS9Eb2N1bWVudHMvR2l0SHViL1RlY2hrd2l6LXY3L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbGliL21ldGFkYXRhL2dlbmVyYXRlL2ljb24tbWFyay5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2phc2VlbS9Eb2N1bWVudHMvR2l0SHViL1RlY2hrd2l6LXY3L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbmV4dC1kZXZ0b29scy91c2Vyc3BhY2UvYXBwL3NlZ21lbnQtZXhwbG9yZXItbm9kZS5qc1wiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fsrc%2Fapp%2Flayout.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fsrc%2Fapp%2Flayout.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \********************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGamFzZWVtJTJGRG9jdW1lbnRzJTJGR2l0SHViJTJGVGVjaGt3aXotdjclMkZmcm9udGVuZCUyRnNyYyUyRmFwcCUyRmxheW91dC50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLG9KQUEyRyIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2phc2VlbS9Eb2N1bWVudHMvR2l0SHViL1RlY2hrd2l6LXY3L2Zyb250ZW5kL3NyYy9hcHAvbGF5b3V0LnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fsrc%2Fapp%2Flayout.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ "(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js");
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call the default export of \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/app/layout.tsx\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/app/layout.tsx",
"default",
));


/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/builtin/global-error.js */ \"(ssr)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(ssr)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(ssr)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(ssr)/./node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/metadata-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/metadata/metadata-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(ssr)/./node_modules/next/dist/lib/metadata/generate/icon-mark.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(ssr)/./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGamFzZWVtJTJGRG9jdW1lbnRzJTJGR2l0SHViJTJGVGVjaGt3aXotdjclMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmJ1aWx0aW4lMkZnbG9iYWwtZXJyb3IuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZqYXNlZW0lMkZEb2N1bWVudHMlMkZHaXRIdWIlMkZUZWNoa3dpei12NyUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZqYXNlZW0lMkZEb2N1bWVudHMlMkZHaXRIdWIlMkZUZWNoa3dpei12NyUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZqYXNlZW0lMkZEb2N1bWVudHMlMkZHaXRIdWIlMkZUZWNoa3dpei12NyUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGaHR0cC1hY2Nlc3MtZmFsbGJhY2slMkZlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRmphc2VlbSUyRkRvY3VtZW50cyUyRkdpdEh1YiUyRlRlY2hrd2l6LXY3JTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZsYXlvdXQtcm91dGVyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGamFzZWVtJTJGRG9jdW1lbnRzJTJGR2l0SHViJTJGVGVjaGt3aXotdjclMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRm1ldGFkYXRhJTJGYXN5bmMtbWV0YWRhdGEuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZqYXNlZW0lMkZEb2N1bWVudHMlMkZHaXRIdWIlMkZUZWNoa3dpei12NyUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGbWV0YWRhdGElMkZtZXRhZGF0YS1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRmphc2VlbSUyRkRvY3VtZW50cyUyRkdpdEh1YiUyRlRlY2hrd2l6LXY3JTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGamFzZWVtJTJGRG9jdW1lbnRzJTJGR2l0SHViJTJGVGVjaGt3aXotdjclMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGbGliJTJGbWV0YWRhdGElMkZnZW5lcmF0ZSUyRmljb24tbWFyay5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRmphc2VlbSUyRkRvY3VtZW50cyUyRkdpdEh1YiUyRlRlY2hrd2l6LXY3JTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRm5leHQtZGV2dG9vbHMlMkZ1c2Vyc3BhY2UlMkZhcHAlMkZzZWdtZW50LWV4cGxvcmVyLW5vZGUuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLHNQQUF5SjtBQUN6SjtBQUNBLG9PQUFnSjtBQUNoSjtBQUNBLDBPQUFtSjtBQUNuSjtBQUNBLG9SQUF3SztBQUN4SztBQUNBLHdPQUFrSjtBQUNsSjtBQUNBLDRQQUE0SjtBQUM1SjtBQUNBLGtRQUErSjtBQUMvSjtBQUNBLHNRQUFpSztBQUNqSztBQUNBLGtPQUFrSjtBQUNsSjtBQUNBLDRRQUFvSyIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2phc2VlbS9Eb2N1bWVudHMvR2l0SHViL1RlY2hrd2l6LXY3L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvYnVpbHRpbi9nbG9iYWwtZXJyb3IuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9qYXNlZW0vRG9jdW1lbnRzL0dpdEh1Yi9UZWNoa3dpei12Ny9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2NsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvamFzZWVtL0RvY3VtZW50cy9HaXRIdWIvVGVjaGt3aXotdjcvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9jbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2phc2VlbS9Eb2N1bWVudHMvR2l0SHViL1RlY2hrd2l6LXY3L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvaHR0cC1hY2Nlc3MtZmFsbGJhY2svZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9qYXNlZW0vRG9jdW1lbnRzL0dpdEh1Yi9UZWNoa3dpei12Ny9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2xheW91dC1yb3V0ZXIuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9qYXNlZW0vRG9jdW1lbnRzL0dpdEh1Yi9UZWNoa3dpei12Ny9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL21ldGFkYXRhL2FzeW5jLW1ldGFkYXRhLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvamFzZWVtL0RvY3VtZW50cy9HaXRIdWIvVGVjaGt3aXotdjcvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9tZXRhZGF0YS9tZXRhZGF0YS1ib3VuZGFyeS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2phc2VlbS9Eb2N1bWVudHMvR2l0SHViL1RlY2hrd2l6LXY3L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvcmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2phc2VlbS9Eb2N1bWVudHMvR2l0SHViL1RlY2hrd2l6LXY3L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbGliL21ldGFkYXRhL2dlbmVyYXRlL2ljb24tbWFyay5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2phc2VlbS9Eb2N1bWVudHMvR2l0SHViL1RlY2hrd2l6LXY3L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbmV4dC1kZXZ0b29scy91c2Vyc3BhY2UvYXBwL3NlZ21lbnQtZXhwbG9yZXItbm9kZS5qc1wiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fsrc%2Fapp%2Flayout.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fsrc%2Fapp%2Flayout.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \********************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(ssr)/./src/app/layout.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGamFzZWVtJTJGRG9jdW1lbnRzJTJGR2l0SHViJTJGVGVjaGt3aXotdjclMkZmcm9udGVuZCUyRnNyYyUyRmFwcCUyRmxheW91dC50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLG9KQUEyRyIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2phc2VlbS9Eb2N1bWVudHMvR2l0SHViL1RlY2hrd2l6LXY3L2Zyb250ZW5kL3NyYy9hcHAvbGF5b3V0LnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fsrc%2Fapp%2Flayout.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"82d039f0f11d\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyIvVXNlcnMvamFzZWVtL0RvY3VtZW50cy9HaXRIdWIvVGVjaGt3aXotdjcvZnJvbnRlbmQvc3JjL2FwcC9nbG9iYWxzLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjgyZDAzOWYwZjExZFwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/app/globals.css\n");

/***/ }),

/***/ "(ssr)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"} */ \"(ssr)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"src/app/layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"inter\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _providers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./providers */ \"(ssr)/./src/app/providers.tsx\");\n/* harmony import */ var _components_GoogleAnalytics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/GoogleAnalytics */ \"(ssr)/./src/components/GoogleAnalytics.tsx\");\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./globals.css */ \"(ssr)/./src/app/globals.css\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"head\", {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_GoogleAnalytics__WEBPACK_IMPORTED_MODULE_2__.GoogleAnalytics, {}, void 0, false, {\n                    fileName: \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/app/layout.tsx\",\n                    lineNumber: 19,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/app/layout.tsx\",\n                lineNumber: 18,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n                className: (next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_5___default().className),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_providers__WEBPACK_IMPORTED_MODULE_1__.Providers, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LayoutWrapper, {\n                        children: children\n                    }, void 0, false, {\n                        fileName: \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/app/layout.tsx\",\n                        lineNumber: 23,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/app/layout.tsx\",\n                    lineNumber: 22,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/app/layout.tsx\",\n                lineNumber: 21,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/app/layout.tsx\",\n        lineNumber: 17,\n        columnNumber: 5\n    }, this);\n}\nfunction LayoutWrapper({ children }) {\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_4__.usePathname)();\n    // Check for both legacy admin routes and current jaseemadmin route\n    const isAdminPage = pathname?.startsWith('/admin') || pathname?.startsWith('/jaseemadmin');\n    if (isAdminPage) {\n        // Full desktop layout for admin pages - no width constraints\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"w-full min-h-screen\",\n            children: children\n        }, void 0, false, {\n            fileName: \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/app/layout.tsx\",\n            lineNumber: 38,\n            columnNumber: 7\n        }, this);\n    }\n    // Original mobile-first layout for quiz website\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-purple-900\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"mx-auto max-w-sm sm:max-w-sm md:max-w-sm lg:max-w-sm xl:max-w-sm 2xl:max-w-sm min-h-screen bg-gray-900/50 backdrop-blur-sm border-x border-white/10\",\n            children: children\n        }, void 0, false, {\n            fileName: \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/app/layout.tsx\",\n            lineNumber: 48,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/app/layout.tsx\",\n        lineNumber: 46,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL2xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQVFNQTtBQUxpQztBQUN1QjtBQUN4QztBQUN1QjtBQUk5QixTQUFTSSxXQUFXLEVBQ2pDQyxRQUFRLEVBR1Q7SUFDQyxxQkFDRSw4REFBQ0M7UUFBS0MsTUFBSzs7MEJBQ1QsOERBQUNDOzBCQUNDLDRFQUFDTix3RUFBZUE7Ozs7Ozs7Ozs7MEJBRWxCLDhEQUFDTztnQkFBS0MsV0FBV1YsK0pBQWU7MEJBQzlCLDRFQUFDQyxpREFBU0E7OEJBQ1IsNEVBQUNVO2tDQUFlTjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUsxQjtBQUVBLFNBQVNNLGNBQWMsRUFBRU4sUUFBUSxFQUFpQztJQUNoRSxNQUFNTyxXQUFXVCw0REFBV0E7SUFDNUIsbUVBQW1FO0lBQ25FLE1BQU1VLGNBQWNELFVBQVVFLFdBQVcsYUFBYUYsVUFBVUUsV0FBVztJQUUzRSxJQUFJRCxhQUFhO1FBQ2YsNkRBQTZEO1FBQzdELHFCQUNFLDhEQUFDRTtZQUFJTCxXQUFVO3NCQUNaTDs7Ozs7O0lBR1A7SUFFQSxnREFBZ0Q7SUFDaEQscUJBQ0UsOERBQUNVO1FBQUlMLFdBQVU7a0JBRWIsNEVBQUNLO1lBQUlMLFdBQVU7c0JBQ1pMOzs7Ozs7Ozs7OztBQUlUIiwic291cmNlcyI6WyIvVXNlcnMvamFzZWVtL0RvY3VtZW50cy9HaXRIdWIvVGVjaGt3aXotdjcvZnJvbnRlbmQvc3JjL2FwcC9sYXlvdXQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuXG5pbXBvcnQgeyBJbnRlciB9IGZyb20gJ25leHQvZm9udC9nb29nbGUnXG5pbXBvcnQgeyBQcm92aWRlcnMgfSBmcm9tICcuL3Byb3ZpZGVycydcbmltcG9ydCB7IEdvb2dsZUFuYWx5dGljcyB9IGZyb20gJ0AvY29tcG9uZW50cy9Hb29nbGVBbmFseXRpY3MnXG5pbXBvcnQgJy4vZ2xvYmFscy5jc3MnXG5pbXBvcnQgeyB1c2VQYXRobmFtZSB9IGZyb20gJ25leHQvbmF2aWdhdGlvbidcblxuY29uc3QgaW50ZXIgPSBJbnRlcih7IHN1YnNldHM6IFsnbGF0aW4nXSB9KVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSb290TGF5b3V0KHtcbiAgY2hpbGRyZW4sXG59OiB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGVcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8aHRtbCBsYW5nPVwiZW5cIj5cbiAgICAgIDxoZWFkPlxuICAgICAgICA8R29vZ2xlQW5hbHl0aWNzIC8+XG4gICAgICA8L2hlYWQ+XG4gICAgICA8Ym9keSBjbGFzc05hbWU9e2ludGVyLmNsYXNzTmFtZX0+XG4gICAgICAgIDxQcm92aWRlcnM+XG4gICAgICAgICAgPExheW91dFdyYXBwZXI+e2NoaWxkcmVufTwvTGF5b3V0V3JhcHBlcj5cbiAgICAgICAgPC9Qcm92aWRlcnM+XG4gICAgICA8L2JvZHk+XG4gICAgPC9odG1sPlxuICApXG59XG5cbmZ1bmN0aW9uIExheW91dFdyYXBwZXIoeyBjaGlsZHJlbiB9OiB7IGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGUgfSkge1xuICBjb25zdCBwYXRobmFtZSA9IHVzZVBhdGhuYW1lKClcbiAgLy8gQ2hlY2sgZm9yIGJvdGggbGVnYWN5IGFkbWluIHJvdXRlcyBhbmQgY3VycmVudCBqYXNlZW1hZG1pbiByb3V0ZVxuICBjb25zdCBpc0FkbWluUGFnZSA9IHBhdGhuYW1lPy5zdGFydHNXaXRoKCcvYWRtaW4nKSB8fCBwYXRobmFtZT8uc3RhcnRzV2l0aCgnL2phc2VlbWFkbWluJylcblxuICBpZiAoaXNBZG1pblBhZ2UpIHtcbiAgICAvLyBGdWxsIGRlc2t0b3AgbGF5b3V0IGZvciBhZG1pbiBwYWdlcyAtIG5vIHdpZHRoIGNvbnN0cmFpbnRzXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidy1mdWxsIG1pbi1oLXNjcmVlblwiPlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cblxuICAvLyBPcmlnaW5hbCBtb2JpbGUtZmlyc3QgbGF5b3V0IGZvciBxdWl6IHdlYnNpdGVcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBiZy1ncmFkaWVudC10by1iciBmcm9tLWdyYXktOTAwIHZpYS1ibHVlLTkwMCB0by1wdXJwbGUtOTAwXCI+XG4gICAgICB7LyogTW9iaWxlLXdlYiBjb250YWluZXIgZm9yIGRlc2t0b3AgKi99XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14LWF1dG8gbWF4LXctc20gc206bWF4LXctc20gbWQ6bWF4LXctc20gbGc6bWF4LXctc20geGw6bWF4LXctc20gMnhsOm1heC13LXNtIG1pbi1oLXNjcmVlbiBiZy1ncmF5LTkwMC81MCBiYWNrZHJvcC1ibHVyLXNtIGJvcmRlci14IGJvcmRlci13aGl0ZS8xMFwiPlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKVxufSJdLCJuYW1lcyI6WyJpbnRlciIsIlByb3ZpZGVycyIsIkdvb2dsZUFuYWx5dGljcyIsInVzZVBhdGhuYW1lIiwiUm9vdExheW91dCIsImNoaWxkcmVuIiwiaHRtbCIsImxhbmciLCJoZWFkIiwiYm9keSIsImNsYXNzTmFtZSIsIkxheW91dFdyYXBwZXIiLCJwYXRobmFtZSIsImlzQWRtaW5QYWdlIiwic3RhcnRzV2l0aCIsImRpdiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./src/app/layout.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/providers.tsx":
/*!*******************************!*\
  !*** ./src/app/providers.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Providers: () => (/* binding */ Providers),\n/* harmony export */   useApp: () => (/* binding */ useApp)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/auth */ \"(ssr)/./src/utils/auth.ts\");\n/* harmony import */ var _context_AdminContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/AdminContext */ \"(ssr)/./src/context/AdminContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ Providers,useApp auto */ \n\n\n\n// Initial state\nconst initialState = {\n    user: null,\n    isAuthenticated: false,\n    currentQuiz: null,\n    quizHistory: [],\n    loading: true\n};\n// Context\nconst AppContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// Reducer\nfunction appReducer(state, action) {\n    switch(action.type){\n        case 'SET_LOADING':\n            return {\n                ...state,\n                loading: action.payload\n            };\n        case 'LOGIN_SUCCESS':\n            return {\n                ...state,\n                user: action.payload,\n                isAuthenticated: true,\n                loading: false\n            };\n        case 'LOGOUT':\n            return {\n                ...state,\n                user: null,\n                isAuthenticated: false,\n                currentQuiz: null,\n                quizHistory: []\n            };\n        case 'UPDATE_COINS':\n            if (!state.user) return state;\n            // Calculate new coin amount\n            const currentCoins = state.user.coins;\n            let newCoins = currentCoins + action.payload;\n            // Never go below 0 coins\n            newCoins = Math.max(0, newCoins);\n            // Cap coins at reasonable maximum (500 coins max)\n            newCoins = Math.min(500, newCoins);\n            const updatedUser = {\n                ...state.user,\n                coins: newCoins\n            };\n            // Save to session storage (not localStorage)\n            (0,_utils_auth__WEBPACK_IMPORTED_MODULE_2__.saveUserToStorage)(updatedUser);\n            (0,_utils_auth__WEBPACK_IMPORTED_MODULE_2__.updateUserCoins)(updatedUser.id, newCoins);\n            console.log(`💰 COINS UPDATE: ${currentCoins} + ${action.payload} = ${newCoins}`);\n            return {\n                ...state,\n                user: updatedUser\n            };\n        case 'START_QUIZ':\n            return {\n                ...state,\n                currentQuiz: action.payload\n            };\n        case 'END_QUIZ':\n            if (!state.user) return state;\n            const quizResult = action.payload;\n            const updatedUserWithQuiz = {\n                ...state.user,\n                totalQuizzes: state.user.totalQuizzes + 1,\n                correctAnswers: state.user.correctAnswers + quizResult.correctAnswers\n            };\n            // Award coins based on quiz performance (25 coins per correct answer)\n            const coinsEarned = quizResult.coinsEarned || 0;\n            updatedUserWithQuiz.coins = state.user.coins + coinsEarned;\n            console.log(`🎉 Quiz completed! Earned ${coinsEarned} coins (${quizResult.correctAnswers} correct × 25)`);\n            // Calculate new level (every 5 quizzes)\n            const newLevel = Math.floor(updatedUserWithQuiz.totalQuizzes / 5) + 1;\n            updatedUserWithQuiz.level = newLevel;\n            // Save quiz result and user data (including coins)\n            (0,_utils_auth__WEBPACK_IMPORTED_MODULE_2__.addQuizResult)(state.user.id, quizResult);\n            (0,_utils_auth__WEBPACK_IMPORTED_MODULE_2__.saveUserToStorage)(updatedUserWithQuiz);\n            (0,_utils_auth__WEBPACK_IMPORTED_MODULE_2__.updateUserCoins)(updatedUserWithQuiz.id, updatedUserWithQuiz.coins);\n            return {\n                ...state,\n                user: updatedUserWithQuiz,\n                currentQuiz: null,\n                quizHistory: [\n                    ...state.quizHistory,\n                    quizResult\n                ]\n            };\n        case 'RESET_USER':\n            return {\n                ...state,\n                user: initialState.user\n            };\n        default:\n            return state;\n    }\n}\n// Provider component\nfunction Providers({ children }) {\n    const [state, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(appReducer, initialState);\n    // Initialize user from localStorage on app start\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Providers.useEffect\": ()=>{\n            const initializeAuth = {\n                \"Providers.useEffect.initializeAuth\": async ()=>{\n                    console.log('🚀 Initializing auth with session-based coins...');\n                    try {\n                        // Check if user is authenticated\n                        const currentUser = (0,_utils_auth__WEBPACK_IMPORTED_MODULE_2__.getCurrentUser)();\n                        if (currentUser) {\n                            // User exists, load with session-based coins (will be 0 if new session)\n                            console.log(`👤 Found user: ${currentUser.name} with ${currentUser.coins} session coins`);\n                            dispatch({\n                                type: 'LOGIN_SUCCESS',\n                                payload: currentUser\n                            });\n                        } else {\n                            console.log('👤 No authenticated user found - will let page components handle guest creation and onboarding');\n                        // Don't auto-create guest user here - let homepage handle onboarding flow\n                        }\n                    } catch (error) {\n                        console.error('Auth initialization error:', error);\n                        dispatch({\n                            type: 'SET_LOADING',\n                            payload: false\n                        });\n                    }\n                    // Always ensure loading is false after auth check\n                    dispatch({\n                        type: 'SET_LOADING',\n                        payload: false\n                    });\n                }\n            }[\"Providers.useEffect.initializeAuth\"];\n            initializeAuth();\n        }\n    }[\"Providers.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AppContext.Provider, {\n        value: {\n            state,\n            dispatch\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_AdminContext__WEBPACK_IMPORTED_MODULE_3__.AdminProvider, {\n            children: children\n        }, void 0, false, {\n            fileName: \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/app/providers.tsx\",\n            lineNumber: 173,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/app/providers.tsx\",\n        lineNumber: 172,\n        columnNumber: 5\n    }, this);\n}\n// Hook to use app context\nfunction useApp() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AppContext);\n    if (context === undefined) {\n        throw new Error('useApp must be used within a Providers');\n    }\n    return context;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/providers.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/GoogleAnalytics.tsx":
/*!********************************************!*\
  !*** ./src/components/GoogleAnalytics.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GoogleAnalytics: () => (/* binding */ GoogleAnalytics),\n/* harmony export */   useGoogleAnalytics: () => (/* binding */ useGoogleAnalytics)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_script__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/script */ \"(ssr)/./node_modules/next/dist/api/script.js\");\n/* harmony import */ var _utils_settingsDataManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/utils/settingsDataManager */ \"(ssr)/./src/utils/settingsDataManager.ts\");\n/* __next_internal_client_entry_do_not_use__ GoogleAnalytics,useGoogleAnalytics auto */ \n\n\n\n// Google Analytics component that injects GA code into all pages\nfunction GoogleAnalytics({ trackingId }) {\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GoogleAnalytics.useEffect\": ()=>{\n            // Only run on client side\n            if (true) return;\n            try {\n                // Load GA settings from admin dashboard\n                const settings = _utils_settingsDataManager__WEBPACK_IMPORTED_MODULE_3__.settingsDataManager.getSystemSettings();\n                const gaConfig = settings.googleAnalytics;\n                if (!gaConfig?.enabled || !gaConfig.trackingId) {\n                    console.log('📊 Google Analytics: Disabled or no tracking ID configured');\n                    return;\n                }\n                const finalTrackingId = trackingId || gaConfig.trackingId;\n                // Initialize Google Analytics\n                if (typeof window.gtag === 'undefined') {\n                    // Create gtag function\n                    window.dataLayer = window.dataLayer || [];\n                    window.gtag = function gtag() {\n                        window.dataLayer.push(arguments);\n                    };\n                    // Configure GA\n                    window.gtag('js', new Date());\n                    window.gtag('config', finalTrackingId, {\n                        page_title: document.title,\n                        page_location: window.location.href,\n                        anonymize_ip: gaConfig.anonymizeIp,\n                        send_page_view: gaConfig.trackPageViews\n                    });\n                    // Configure additional measurement ID if provided\n                    if (gaConfig.measurementId && gaConfig.measurementId !== finalTrackingId) {\n                        window.gtag('config', gaConfig.measurementId, {\n                            anonymize_ip: gaConfig.anonymizeIp,\n                            send_page_view: gaConfig.trackPageViews\n                        });\n                    }\n                    console.log('📊 Google Analytics initialized:', finalTrackingId);\n                }\n                // Execute custom code if provided\n                if (gaConfig.customCode) {\n                    try {\n                        // Create a function to safely execute custom code\n                        const executeCustomCode = new Function(gaConfig.customCode);\n                        executeCustomCode();\n                        console.log('📊 Google Analytics custom code executed');\n                    } catch (error) {\n                        console.error('📊 Google Analytics custom code error:', error);\n                    }\n                }\n            } catch (error) {\n                console.error('📊 Google Analytics initialization error:', error);\n            }\n        }\n    }[\"GoogleAnalytics.useEffect\"], [\n        trackingId\n    ]);\n    // Get GA configuration\n    const getGAConfig = ()=>{\n        if (true) return null;\n        try {\n            const settings = _utils_settingsDataManager__WEBPACK_IMPORTED_MODULE_3__.settingsDataManager.getSystemSettings();\n            return settings.googleAnalytics;\n        } catch (error) {\n            console.error('Error loading GA config:', error);\n            return null;\n        }\n    };\n    const gaConfig = getGAConfig();\n    // Don't render anything if GA is disabled or no tracking ID\n    if (!gaConfig?.enabled || !gaConfig.trackingId) {\n        return null;\n    }\n    const finalTrackingId = trackingId || gaConfig.trackingId;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_script__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                src: `https://www.googletagmanager.com/gtag/js?id=${finalTrackingId}`,\n                strategy: \"afterInteractive\"\n            }, void 0, false, {\n                fileName: \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/components/GoogleAnalytics.tsx\",\n                lineNumber: 99,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_script__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                id: \"google-analytics\",\n                strategy: \"afterInteractive\",\n                children: `\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){dataLayer.push(arguments);}\n          gtag('js', new Date());\n          \n          gtag('config', '${finalTrackingId}', {\n            anonymize_ip: ${gaConfig.anonymizeIp},\n            send_page_view: ${gaConfig.trackPageViews}\n          });\n          \n          ${gaConfig.measurementId && gaConfig.measurementId !== finalTrackingId ? `\n          gtag('config', '${gaConfig.measurementId}', {\n            anonymize_ip: ${gaConfig.anonymizeIp},\n            send_page_view: ${gaConfig.trackPageViews}\n          });\n          ` : ''}\n          \n          ${gaConfig.customCode || ''}\n        `\n            }, void 0, false, {\n                fileName: \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/components/GoogleAnalytics.tsx\",\n                lineNumber: 105,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n// Hook to track page views manually\nfunction useGoogleAnalytics() {\n    const trackPageView = (url, title)=>{\n        if (true) return;\n        try {\n            const settings = _utils_settingsDataManager__WEBPACK_IMPORTED_MODULE_3__.settingsDataManager.getSystemSettings();\n            const gaConfig = settings.googleAnalytics;\n            if (!gaConfig?.enabled || !gaConfig.trackPageViews) return;\n            window.gtag('config', gaConfig.trackingId, {\n                page_title: title || document.title,\n                page_location: url\n            });\n            console.log('📊 GA Page view tracked:', url);\n        } catch (error) {\n            console.error('📊 GA Page view tracking error:', error);\n        }\n    };\n    const trackEvent = (eventName, parameters)=>{\n        if (true) return;\n        try {\n            const settings = _utils_settingsDataManager__WEBPACK_IMPORTED_MODULE_3__.settingsDataManager.getSystemSettings();\n            const gaConfig = settings.googleAnalytics;\n            if (!gaConfig?.enabled || !gaConfig.trackEvents) return;\n            window.gtag('event', eventName, parameters);\n            console.log('📊 GA Event tracked:', eventName, parameters);\n        } catch (error) {\n            console.error('📊 GA Event tracking error:', error);\n        }\n    };\n    return {\n        trackPageView,\n        trackEvent\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/GoogleAnalytics.tsx\n");

/***/ }),

/***/ "(ssr)/./src/context/AdminContext.tsx":
/*!**************************************!*\
  !*** ./src/context/AdminContext.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdminProvider: () => (/* binding */ AdminProvider),\n/* harmony export */   useAdmin: () => (/* binding */ useAdmin)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/api */ \"(ssr)/./src/utils/api.ts\");\n/* __next_internal_client_entry_do_not_use__ AdminProvider,useAdmin auto */ \n\n\nconst AdminContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction AdminProvider({ children }) {\n    const [adminUser, setAdminUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // Don't block main app loading\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AdminProvider.useEffect\": ()=>{\n            // Check for stored admin token on mount\n            const storedToken = localStorage.getItem('admin_token');\n            const storedUsername = localStorage.getItem('admin_username');\n            if (storedToken && storedUsername) {\n                console.log('🔄 Found stored credentials, setting admin user immediately');\n                // Set user immediately to prevent redirect loops\n                setAdminUser({\n                    username: storedUsername,\n                    token: storedToken\n                });\n                // Verify token with backend (non-blocking - don't wait for this)\n                verifyToken(storedToken, storedUsername).catch(console.error);\n            } else {\n                // No stored credentials, set loading to false\n                setLoading(false);\n            }\n        }\n    }[\"AdminProvider.useEffect\"], []);\n    const verifyToken = async (token, username)=>{\n        try {\n            console.log('🔐 Verifying admin token for:', username);\n            const response = await (0,_utils_api__WEBPACK_IMPORTED_MODULE_2__.apiRequest)('/api/admin/verify', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n            if (response.ok) {\n                console.log('✅ Admin token verified successfully');\n                setLoading(false);\n            } else {\n                console.log('❌ Admin token verification failed');\n                // Clear invalid token\n                localStorage.removeItem('admin_token');\n                localStorage.removeItem('admin_username');\n                setAdminUser(null);\n                setLoading(false);\n            }\n        } catch (error) {\n            console.error('❌ Admin token verification error:', error);\n            // Clear potentially invalid token\n            localStorage.removeItem('admin_token');\n            localStorage.removeItem('admin_username');\n            setAdminUser(null);\n            setLoading(false);\n        }\n    };\n    const login = async (username, password)=>{\n        try {\n            console.log('🔍 Admin login attempt:', username);\n            const loginData = await (0,_utils_api__WEBPACK_IMPORTED_MODULE_2__.apiRequestJson)('/api/admin/login', {\n                method: 'POST',\n                body: JSON.stringify({\n                    username,\n                    password\n                })\n            });\n            const token = loginData.access_token;\n            console.log('✅ Admin login successful, token received');\n            // Store credentials\n            localStorage.setItem('admin_token', token);\n            localStorage.setItem('admin_username', username);\n            setAdminUser({\n                username,\n                token\n            });\n            return true;\n        } catch (error) {\n            console.error('❌ Admin login error:', error);\n            return false;\n        }\n    };\n    const logout = ()=>{\n        localStorage.removeItem('admin_token');\n        localStorage.removeItem('admin_username');\n        setAdminUser(null);\n    };\n    const value = {\n        adminUser,\n        isAuthenticated: !!adminUser,\n        login,\n        logout,\n        loading\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AdminContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/jaseem/Documents/GitHub/Techkwiz-v7/frontend/src/context/AdminContext.tsx\",\n        lineNumber: 113,\n        columnNumber: 10\n    }, this);\n}\nconst useAdmin = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AdminContext);\n    if (context === undefined) {\n        throw new Error('useAdmin must be used within an AdminProvider');\n    }\n    return context;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/context/AdminContext.tsx\n");

/***/ }),

/***/ "(ssr)/./src/types/admin.ts":
/*!****************************!*\
  !*** ./src/types/admin.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACHIEVEMENT_ICONS: () => (/* binding */ ACHIEVEMENT_ICONS),\n/* harmony export */   ALLOWED_FILE_TYPES: () => (/* binding */ ALLOWED_FILE_TYPES),\n/* harmony export */   ANALYTICS_STORAGE_KEYS: () => (/* binding */ ANALYTICS_STORAGE_KEYS),\n/* harmony export */   AVAILABLE_LANGUAGES: () => (/* binding */ AVAILABLE_LANGUAGES),\n/* harmony export */   AVAILABLE_TIMEZONES: () => (/* binding */ AVAILABLE_TIMEZONES),\n/* harmony export */   CHART_COLORS: () => (/* binding */ CHART_COLORS),\n/* harmony export */   DEFAULT_ACHIEVEMENT_TEMPLATES: () => (/* binding */ DEFAULT_ACHIEVEMENT_TEMPLATES),\n/* harmony export */   DEFAULT_CATEGORIES: () => (/* binding */ DEFAULT_CATEGORIES),\n/* harmony export */   DEFAULT_FILE_SETTINGS: () => (/* binding */ DEFAULT_FILE_SETTINGS),\n/* harmony export */   DEFAULT_REWARD_CONFIG: () => (/* binding */ DEFAULT_REWARD_CONFIG),\n/* harmony export */   DEFAULT_SECURITY_SETTINGS: () => (/* binding */ DEFAULT_SECURITY_SETTINGS),\n/* harmony export */   DEFAULT_SYSTEM_SETTINGS: () => (/* binding */ DEFAULT_SYSTEM_SETTINGS),\n/* harmony export */   DEFAULT_TIME_RANGES: () => (/* binding */ DEFAULT_TIME_RANGES),\n/* harmony export */   DEFAULT_USER_PREFERENCES: () => (/* binding */ DEFAULT_USER_PREFERENCES),\n/* harmony export */   FILE_ICONS: () => (/* binding */ FILE_ICONS),\n/* harmony export */   FILE_SIZE_LIMITS: () => (/* binding */ FILE_SIZE_LIMITS),\n/* harmony export */   FILE_STORAGE_KEYS: () => (/* binding */ FILE_STORAGE_KEYS),\n/* harmony export */   QUIZ_STORAGE_KEYS: () => (/* binding */ QUIZ_STORAGE_KEYS),\n/* harmony export */   REWARD_STORAGE_KEYS: () => (/* binding */ REWARD_STORAGE_KEYS),\n/* harmony export */   SETTINGS_STORAGE_KEYS: () => (/* binding */ SETTINGS_STORAGE_KEYS)\n/* harmony export */ });\n// localStorage keys\nconst QUIZ_STORAGE_KEYS = {\n    QUESTIONS: 'admin_quiz_questions',\n    DRAFTS: 'admin_quiz_drafts',\n    SETTINGS: 'admin_quiz_settings',\n    BACKUP: 'admin_quiz_backup'\n};\nconst REWARD_STORAGE_KEYS = {\n    CONFIG: 'admin_reward_config',\n    ACHIEVEMENTS: 'admin_achievements',\n    SETTINGS: 'admin_reward_settings',\n    BACKUP: 'admin_reward_backup'\n};\nconst ANALYTICS_STORAGE_KEYS = {\n    DATA: 'admin_analytics_data',\n    SETTINGS: 'admin_analytics_settings',\n    CACHE: 'admin_analytics_cache',\n    EXPORT_HISTORY: 'admin_analytics_exports'\n};\nconst SETTINGS_STORAGE_KEYS = {\n    SYSTEM: 'admin_system_settings',\n    USER_PREFERENCES: 'admin_user_preferences',\n    SECURITY: 'admin_security_settings',\n    INTEGRATIONS: 'admin_integration_settings',\n    BACKUP: 'admin_settings_backup'\n};\nconst FILE_STORAGE_KEYS = {\n    FILES: 'admin_files',\n    FOLDERS: 'admin_folders',\n    SETTINGS: 'admin_file_settings',\n    QUOTA: 'admin_storage_quota',\n    CACHE: 'admin_file_cache'\n};\n// Default time ranges for analytics\nconst DEFAULT_TIME_RANGES = [\n    {\n        start: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),\n        end: new Date(),\n        label: 'Last 7 days'\n    },\n    {\n        start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000),\n        end: new Date(),\n        label: 'Last 30 days'\n    },\n    {\n        start: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000),\n        end: new Date(),\n        label: 'Last 3 months'\n    },\n    {\n        start: new Date(Date.now() - 365 * 24 * 60 * 60 * 1000),\n        end: new Date(),\n        label: 'Last year'\n    }\n];\n// Chart color palette\nconst CHART_COLORS = {\n    primary: '#3B82F6',\n    secondary: '#10B981',\n    accent: '#F59E0B',\n    danger: '#EF4444',\n    purple: '#8B5CF6',\n    pink: '#EC4899',\n    indigo: '#6366F1',\n    teal: '#14B8A6'\n};\n// Default categories\nconst DEFAULT_CATEGORIES = [\n    {\n        id: 'movies',\n        name: 'Movies',\n        description: 'Film and cinema questions',\n        questionCount: 0\n    },\n    {\n        id: 'social-media',\n        name: 'Social Media',\n        description: 'Social platforms and trends',\n        questionCount: 0\n    },\n    {\n        id: 'influencers',\n        name: 'Influencers',\n        description: 'Content creators and personalities',\n        questionCount: 0\n    },\n    {\n        id: 'gen-z',\n        name: 'Gen Z',\n        description: 'Generation Z culture and trends',\n        questionCount: 0\n    },\n    {\n        id: 'gaming',\n        name: 'Gaming',\n        description: 'Video games and gaming culture',\n        questionCount: 0\n    },\n    {\n        id: 'music',\n        name: 'Music',\n        description: 'Artists, songs, and music industry',\n        questionCount: 0\n    },\n    {\n        id: 'travel',\n        name: 'Travel',\n        description: 'Destinations and travel culture',\n        questionCount: 0\n    },\n    {\n        id: 'food',\n        name: 'Food',\n        description: 'Cuisine and food trends',\n        questionCount: 0\n    },\n    {\n        id: 'animals',\n        name: 'Animals',\n        description: 'Wildlife and pets',\n        questionCount: 0\n    },\n    {\n        id: 'facts',\n        name: 'Facts',\n        description: 'Interesting facts and trivia',\n        questionCount: 0\n    }\n];\n// Default reward configuration\nconst DEFAULT_REWARD_CONFIG = {\n    coinValues: {\n        correct: 14,\n        incorrect: 5,\n        bonus: 50,\n        streakMultiplier: 2\n    },\n    achievements: [],\n    popupSettings: {\n        animationType: 'treasure_chest',\n        duration: 3,\n        showFunFact: true,\n        autoClose: true,\n        adSenseEnabled: false,\n        customMessages: {\n            correct: 'Great job! You earned {coins} coins!',\n            incorrect: 'Keep trying! You earned {coins} coins for the attempt.',\n            bonus: 'Bonus question! You earned {coins} coins!',\n            achievement: 'Achievement unlocked: {achievement}!'\n        }\n    },\n    adSenseConfig: {\n        enabled: false,\n        adUnitId: '',\n        adSlotId: '',\n        testMode: true,\n        placement: 'popup',\n        frequency: 5\n    },\n    isEnabled: true\n};\n// Default achievement templates\nconst DEFAULT_ACHIEVEMENT_TEMPLATES = [\n    {\n        name: 'First Steps',\n        description: 'Answer your first question',\n        icon: '🎯',\n        requirement: {\n            type: 'questions_answered',\n            value: 1\n        },\n        reward: {\n            coins: 25,\n            badge: 'beginner'\n        },\n        isActive: true\n    },\n    {\n        name: 'Streak Master',\n        description: 'Get 5 questions correct in a row',\n        icon: '🔥',\n        requirement: {\n            type: 'correct_streak',\n            value: 5\n        },\n        reward: {\n            coins: 100,\n            badge: 'streak'\n        },\n        isActive: true\n    },\n    {\n        name: 'Category Expert',\n        description: 'Answer 10 questions correctly in any category',\n        icon: '👑',\n        requirement: {\n            type: 'category_master',\n            value: 10\n        },\n        reward: {\n            coins: 200,\n            badge: 'expert'\n        },\n        isActive: true\n    }\n];\n// Achievement icons\nconst ACHIEVEMENT_ICONS = [\n    '🎯',\n    '🔥',\n    '👑',\n    '🏆',\n    '⭐',\n    '💎',\n    '🎖️',\n    '🥇',\n    '🥈',\n    '🥉',\n    '🎪',\n    '🎨',\n    '🎭',\n    '🎪',\n    '🎯',\n    '🎲',\n    '🎮',\n    '🎸',\n    '🎺',\n    '🎻'\n];\n// File type configurations\nconst ALLOWED_FILE_TYPES = {\n    images: [\n        'image/jpeg',\n        'image/png',\n        'image/gif',\n        'image/webp'\n    ],\n    documents: [\n        'application/pdf',\n        'text/plain',\n        'application/msword',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    ],\n    audio: [\n        'audio/mpeg',\n        'audio/wav',\n        'audio/ogg'\n    ],\n    video: [\n        'video/mp4',\n        'video/webm',\n        'video/ogg'\n    ]\n};\nconst FILE_SIZE_LIMITS = {\n    maxFileSize: 10 * 1024 * 1024,\n    maxTotalSize: 100 * 1024 * 1024,\n    thumbnailSize: 200,\n    previewSize: 800 // 800px previews\n};\n// Default file settings\nconst DEFAULT_FILE_SETTINGS = {\n    maxFileSize: FILE_SIZE_LIMITS.maxFileSize,\n    allowedTypes: [\n        ...ALLOWED_FILE_TYPES.images,\n        ...ALLOWED_FILE_TYPES.documents,\n        ...ALLOWED_FILE_TYPES.audio,\n        ...ALLOWED_FILE_TYPES.video\n    ],\n    autoOptimize: true,\n    generateThumbnails: true,\n    defaultFolder: 'uploads',\n    compressionLevel: 80\n};\n// File icons mapping\nconst FILE_ICONS = {\n    // Images\n    'image/jpeg': '🖼️',\n    'image/png': '🖼️',\n    'image/gif': '🎞️',\n    'image/webp': '🖼️',\n    // Documents\n    'application/pdf': '📄',\n    'text/plain': '📝',\n    'application/msword': '📄',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': '📄',\n    // Audio\n    'audio/mpeg': '🎵',\n    'audio/wav': '🎵',\n    'audio/ogg': '🎵',\n    // Video\n    'video/mp4': '🎬',\n    'video/webm': '🎬',\n    'video/ogg': '🎬',\n    // Folders\n    'folder': '📁',\n    // Default\n    'default': '📎'\n};\n// Default system settings\nconst DEFAULT_SYSTEM_SETTINGS = {\n    applicationName: 'TechKwiz',\n    applicationVersion: '1.0.0',\n    maintenanceMode: false,\n    debugMode: false,\n    logLevel: 'info',\n    maxUsers: 100,\n    sessionTimeout: 30,\n    autoBackup: true,\n    backupFrequency: 'weekly',\n    googleAnalytics: {\n        enabled: false,\n        trackingId: '',\n        measurementId: '',\n        customCode: '',\n        trackPageViews: true,\n        trackEvents: true,\n        anonymizeIp: true,\n        updatedAt: Date.now()\n    }\n};\n// Default user preferences\nconst DEFAULT_USER_PREFERENCES = {\n    theme: 'light',\n    language: 'en',\n    timezone: 'UTC',\n    dateFormat: 'MM/DD/YYYY',\n    timeFormat: '12h',\n    dashboardLayout: 'comfortable',\n    notifications: {\n        emailNotifications: true,\n        pushNotifications: false,\n        systemAlerts: true,\n        maintenanceAlerts: true,\n        securityAlerts: true,\n        digestFrequency: 'daily'\n    },\n    accessibility: {\n        highContrast: false,\n        largeText: false,\n        reducedMotion: false,\n        screenReader: false,\n        keyboardNavigation: true\n    }\n};\n// Default security settings\nconst DEFAULT_SECURITY_SETTINGS = {\n    passwordPolicy: {\n        minLength: 8,\n        requireUppercase: true,\n        requireLowercase: true,\n        requireNumbers: true,\n        requireSpecialChars: true,\n        expirationDays: 90,\n        preventReuse: 5\n    },\n    sessionSecurity: {\n        maxConcurrentSessions: 3,\n        idleTimeout: 30,\n        forceLogoutOnPasswordChange: true,\n        requireReauthForSensitive: true\n    },\n    loginAttempts: {\n        maxAttempts: 5,\n        lockoutDuration: 15,\n        resetAfter: 60,\n        notifyOnLockout: true\n    },\n    twoFactorAuth: false,\n    ipWhitelist: [],\n    auditLogging: true,\n    encryptionEnabled: true\n};\n// Available languages\nconst AVAILABLE_LANGUAGES = [\n    {\n        code: 'en',\n        name: 'English',\n        flag: '🇺🇸'\n    },\n    {\n        code: 'es',\n        name: 'Español',\n        flag: '🇪🇸'\n    },\n    {\n        code: 'fr',\n        name: 'Français',\n        flag: '🇫🇷'\n    },\n    {\n        code: 'de',\n        name: 'Deutsch',\n        flag: '🇩🇪'\n    },\n    {\n        code: 'it',\n        name: 'Italiano',\n        flag: '🇮🇹'\n    },\n    {\n        code: 'pt',\n        name: 'Português',\n        flag: '🇵🇹'\n    },\n    {\n        code: 'ru',\n        name: 'Русский',\n        flag: '🇷🇺'\n    },\n    {\n        code: 'ja',\n        name: '日本語',\n        flag: '🇯🇵'\n    },\n    {\n        code: 'ko',\n        name: '한국어',\n        flag: '🇰🇷'\n    },\n    {\n        code: 'zh',\n        name: '中文',\n        flag: '🇨🇳'\n    }\n];\n// Available timezones\nconst AVAILABLE_TIMEZONES = [\n    {\n        value: 'UTC',\n        label: 'UTC (Coordinated Universal Time)'\n    },\n    {\n        value: 'America/New_York',\n        label: 'Eastern Time (ET)'\n    },\n    {\n        value: 'America/Chicago',\n        label: 'Central Time (CT)'\n    },\n    {\n        value: 'America/Denver',\n        label: 'Mountain Time (MT)'\n    },\n    {\n        value: 'America/Los_Angeles',\n        label: 'Pacific Time (PT)'\n    },\n    {\n        value: 'Europe/London',\n        label: 'Greenwich Mean Time (GMT)'\n    },\n    {\n        value: 'Europe/Paris',\n        label: 'Central European Time (CET)'\n    },\n    {\n        value: 'Asia/Tokyo',\n        label: 'Japan Standard Time (JST)'\n    },\n    {\n        value: 'Asia/Shanghai',\n        label: 'China Standard Time (CST)'\n    },\n    {\n        value: 'Australia/Sydney',\n        label: 'Australian Eastern Time (AET)'\n    }\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/types/admin.ts\n");

/***/ }),

/***/ "(ssr)/./src/utils/api.ts":
/*!**************************!*\
  !*** ./src/utils/api.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiRequest: () => (/* binding */ apiRequest),\n/* harmony export */   apiRequestJson: () => (/* binding */ apiRequestJson),\n/* harmony export */   getBackendUrl: () => (/* binding */ getBackendUrl)\n/* harmony export */ });\n/**\n * API utilities for TechKwiz frontend\n * Handles backend URL detection and API calls with proper error handling\n */ /**\n * Get the correct backend URL based on environment\n */ function getBackendUrl() {\n    // If environment variable is set and not empty, use it\n    if (false) {}\n    // For Next.js apps with proxy configuration, use empty string for relative paths\n    // This will use the Next.js rewrites to proxy to localhost:8001\n    if (false) {}\n    // Fallback to localhost for server-side rendering\n    return 'http://localhost:8001';\n}\n/**\n * Make API request with proper error handling and timeout\n */ async function apiRequest(endpoint, options = {}) {\n    const backendUrl = getBackendUrl();\n    const url = endpoint.startsWith('http') ? endpoint : `${backendUrl}${endpoint.startsWith('/') ? '' : '/'}${endpoint}`;\n    const defaultOptions = {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            ...options.headers\n        },\n        signal: AbortSignal.timeout(10000),\n        ...options\n    };\n    console.log(`🌐 API Request: ${options.method || 'GET'} ${url}`);\n    try {\n        const response = await fetch(url, defaultOptions);\n        if (!response.ok) {\n            console.error(`❌ API Error: ${response.status} ${response.statusText}`);\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n        }\n        console.log(`✅ API Success: ${options.method || 'GET'} ${url}`);\n        return response;\n    } catch (error) {\n        console.error(`❌ API Request Failed: ${url}`, error);\n        throw error;\n    }\n}\n/**\n * Make API request and return JSON with error handling\n */ async function apiRequestJson(endpoint, options = {}) {\n    const response = await apiRequest(endpoint, options);\n    return response.json();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvdXRpbHMvYXBpLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Q0FHQyxHQUVEOztDQUVDLEdBQ00sU0FBU0E7SUFDZCx1REFBdUQ7SUFDdkQsSUFBSUMsS0FBd0YsRUFBRSxFQUU3RjtJQUVELGlGQUFpRjtJQUNqRixnRUFBZ0U7SUFDaEUsSUFBSSxLQUE2QixFQUFFLEVBRWxDO0lBRUQsa0RBQWtEO0lBQ2xELE9BQU87QUFDVDtBQUVBOztDQUVDLEdBQ00sZUFBZUksV0FBV0MsUUFBZ0IsRUFBRUMsVUFBdUIsQ0FBQyxDQUFDO0lBQzFFLE1BQU1DLGFBQWFSO0lBQ25CLE1BQU1TLE1BQU1ILFNBQVNJLFVBQVUsQ0FBQyxVQUFVSixXQUFXLEdBQUdFLGFBQWFGLFNBQVNJLFVBQVUsQ0FBQyxPQUFPLEtBQUssTUFBTUosVUFBVTtJQUVySCxNQUFNSyxpQkFBOEI7UUFDbENDLFFBQVE7UUFDUkMsU0FBUztZQUNQLGdCQUFnQjtZQUNoQixHQUFHTixRQUFRTSxPQUFPO1FBQ3BCO1FBQ0FDLFFBQVFDLFlBQVlDLE9BQU8sQ0FBQztRQUM1QixHQUFHVCxPQUFPO0lBQ1o7SUFFQVUsUUFBUUMsR0FBRyxDQUFDLENBQUMsZ0JBQWdCLEVBQUVYLFFBQVFLLE1BQU0sSUFBSSxNQUFNLENBQUMsRUFBRUgsS0FBSztJQUUvRCxJQUFJO1FBQ0YsTUFBTVUsV0FBVyxNQUFNQyxNQUFNWCxLQUFLRTtRQUVsQyxJQUFJLENBQUNRLFNBQVNFLEVBQUUsRUFBRTtZQUNoQkosUUFBUUssS0FBSyxDQUFDLENBQUMsYUFBYSxFQUFFSCxTQUFTSSxNQUFNLENBQUMsQ0FBQyxFQUFFSixTQUFTSyxVQUFVLEVBQUU7WUFDdEUsTUFBTSxJQUFJQyxNQUFNLENBQUMsS0FBSyxFQUFFTixTQUFTSSxNQUFNLENBQUMsRUFBRSxFQUFFSixTQUFTSyxVQUFVLEVBQUU7UUFDbkU7UUFFQVAsUUFBUUMsR0FBRyxDQUFDLENBQUMsZUFBZSxFQUFFWCxRQUFRSyxNQUFNLElBQUksTUFBTSxDQUFDLEVBQUVILEtBQUs7UUFDOUQsT0FBT1U7SUFDVCxFQUFFLE9BQU9HLE9BQU87UUFDZEwsUUFBUUssS0FBSyxDQUFDLENBQUMsc0JBQXNCLEVBQUViLEtBQUssRUFBRWE7UUFDOUMsTUFBTUE7SUFDUjtBQUNGO0FBRUE7O0NBRUMsR0FDTSxlQUFlSSxlQUF3QnBCLFFBQWdCLEVBQUVDLFVBQXVCLENBQUMsQ0FBQztJQUN2RixNQUFNWSxXQUFXLE1BQU1kLFdBQVdDLFVBQVVDO0lBQzVDLE9BQU9ZLFNBQVNRLElBQUk7QUFDdEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXNlZW0vRG9jdW1lbnRzL0dpdEh1Yi9UZWNoa3dpei12Ny9mcm9udGVuZC9zcmMvdXRpbHMvYXBpLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQVBJIHV0aWxpdGllcyBmb3IgVGVjaEt3aXogZnJvbnRlbmRcbiAqIEhhbmRsZXMgYmFja2VuZCBVUkwgZGV0ZWN0aW9uIGFuZCBBUEkgY2FsbHMgd2l0aCBwcm9wZXIgZXJyb3IgaGFuZGxpbmdcbiAqL1xuXG4vKipcbiAqIEdldCB0aGUgY29ycmVjdCBiYWNrZW5kIFVSTCBiYXNlZCBvbiBlbnZpcm9ubWVudFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QmFja2VuZFVybCgpOiBzdHJpbmcge1xuICAvLyBJZiBlbnZpcm9ubWVudCB2YXJpYWJsZSBpcyBzZXQgYW5kIG5vdCBlbXB0eSwgdXNlIGl0XG4gIGlmIChwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19CQUNLRU5EX1VSTCAmJiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19CQUNLRU5EX1VSTC50cmltKCkgIT09ICcnKSB7XG4gICAgcmV0dXJuIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0JBQ0tFTkRfVVJMXG4gIH1cbiAgXG4gIC8vIEZvciBOZXh0LmpzIGFwcHMgd2l0aCBwcm94eSBjb25maWd1cmF0aW9uLCB1c2UgZW1wdHkgc3RyaW5nIGZvciByZWxhdGl2ZSBwYXRoc1xuICAvLyBUaGlzIHdpbGwgdXNlIHRoZSBOZXh0LmpzIHJld3JpdGVzIHRvIHByb3h5IHRvIGxvY2FsaG9zdDo4MDAxXG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiAnJyAvLyBSZWxhdGl2ZSBVUkxzIHdpbGwgYmUgcHJveGllZCBieSBOZXh0LmpzXG4gIH1cbiAgXG4gIC8vIEZhbGxiYWNrIHRvIGxvY2FsaG9zdCBmb3Igc2VydmVyLXNpZGUgcmVuZGVyaW5nXG4gIHJldHVybiAnaHR0cDovL2xvY2FsaG9zdDo4MDAxJ1xufVxuXG4vKipcbiAqIE1ha2UgQVBJIHJlcXVlc3Qgd2l0aCBwcm9wZXIgZXJyb3IgaGFuZGxpbmcgYW5kIHRpbWVvdXRcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFwaVJlcXVlc3QoZW5kcG9pbnQ6IHN0cmluZywgb3B0aW9uczogUmVxdWVzdEluaXQgPSB7fSk6IFByb21pc2U8UmVzcG9uc2U+IHtcbiAgY29uc3QgYmFja2VuZFVybCA9IGdldEJhY2tlbmRVcmwoKVxuICBjb25zdCB1cmwgPSBlbmRwb2ludC5zdGFydHNXaXRoKCdodHRwJykgPyBlbmRwb2ludCA6IGAke2JhY2tlbmRVcmx9JHtlbmRwb2ludC5zdGFydHNXaXRoKCcvJykgPyAnJyA6ICcvJ30ke2VuZHBvaW50fWBcbiAgXG4gIGNvbnN0IGRlZmF1bHRPcHRpb25zOiBSZXF1ZXN0SW5pdCA9IHtcbiAgICBtZXRob2Q6ICdHRVQnLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAuLi5vcHRpb25zLmhlYWRlcnMsXG4gICAgfSxcbiAgICBzaWduYWw6IEFib3J0U2lnbmFsLnRpbWVvdXQoMTAwMDApLCAvLyAxMCBzZWNvbmQgdGltZW91dFxuICAgIC4uLm9wdGlvbnMsXG4gIH1cbiAgXG4gIGNvbnNvbGUubG9nKGDwn4yQIEFQSSBSZXF1ZXN0OiAke29wdGlvbnMubWV0aG9kIHx8ICdHRVQnfSAke3VybH1gKVxuICBcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwgZGVmYXVsdE9wdGlvbnMpXG4gICAgXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgY29uc29sZS5lcnJvcihg4p2MIEFQSSBFcnJvcjogJHtyZXNwb25zZS5zdGF0dXN9ICR7cmVzcG9uc2Uuc3RhdHVzVGV4dH1gKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBIVFRQICR7cmVzcG9uc2Uuc3RhdHVzfTogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApXG4gICAgfVxuICAgIFxuICAgIGNvbnNvbGUubG9nKGDinIUgQVBJIFN1Y2Nlc3M6ICR7b3B0aW9ucy5tZXRob2QgfHwgJ0dFVCd9ICR7dXJsfWApXG4gICAgcmV0dXJuIHJlc3BvbnNlXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihg4p2MIEFQSSBSZXF1ZXN0IEZhaWxlZDogJHt1cmx9YCwgZXJyb3IpXG4gICAgdGhyb3cgZXJyb3JcbiAgfVxufVxuXG4vKipcbiAqIE1ha2UgQVBJIHJlcXVlc3QgYW5kIHJldHVybiBKU09OIHdpdGggZXJyb3IgaGFuZGxpbmdcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFwaVJlcXVlc3RKc29uPFQgPSBhbnk+KGVuZHBvaW50OiBzdHJpbmcsIG9wdGlvbnM6IFJlcXVlc3RJbml0ID0ge30pOiBQcm9taXNlPFQ+IHtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGlSZXF1ZXN0KGVuZHBvaW50LCBvcHRpb25zKVxuICByZXR1cm4gcmVzcG9uc2UuanNvbigpXG59Il0sIm5hbWVzIjpbImdldEJhY2tlbmRVcmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQkFDS0VORF9VUkwiLCJ0cmltIiwiYXBpUmVxdWVzdCIsImVuZHBvaW50Iiwib3B0aW9ucyIsImJhY2tlbmRVcmwiLCJ1cmwiLCJzdGFydHNXaXRoIiwiZGVmYXVsdE9wdGlvbnMiLCJtZXRob2QiLCJoZWFkZXJzIiwic2lnbmFsIiwiQWJvcnRTaWduYWwiLCJ0aW1lb3V0IiwiY29uc29sZSIsImxvZyIsInJlc3BvbnNlIiwiZmV0Y2giLCJvayIsImVycm9yIiwic3RhdHVzIiwic3RhdHVzVGV4dCIsIkVycm9yIiwiYXBpUmVxdWVzdEpzb24iLCJqc29uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/utils/api.ts\n");

/***/ }),

/***/ "(ssr)/./src/utils/auth.ts":
/*!***************************!*\
  !*** ./src/utils/auth.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addQuizResult: () => (/* binding */ addQuizResult),\n/* harmony export */   clearSessionCoins: () => (/* binding */ clearSessionCoins),\n/* harmony export */   clearUserData: () => (/* binding */ clearUserData),\n/* harmony export */   createUserProfile: () => (/* binding */ createUserProfile),\n/* harmony export */   getCurrentUser: () => (/* binding */ getCurrentUser),\n/* harmony export */   getSessionCoins: () => (/* binding */ getSessionCoins),\n/* harmony export */   getUserFromStorage: () => (/* binding */ getUserFromStorage),\n/* harmony export */   isAuthenticated: () => (/* binding */ isAuthenticated),\n/* harmony export */   login: () => (/* binding */ login),\n/* harmony export */   logout: () => (/* binding */ logout),\n/* harmony export */   saveUserToStorage: () => (/* binding */ saveUserToStorage),\n/* harmony export */   setSessionCoins: () => (/* binding */ setSessionCoins),\n/* harmony export */   signup: () => (/* binding */ signup),\n/* harmony export */   updateUserCoins: () => (/* binding */ updateUserCoins)\n/* harmony export */ });\n// Simple browser-only authentication utilities\nconst STORAGE_KEYS = {\n    USER: 'techkwiz_user',\n    AUTH_TOKEN: 'techkwiz_auth',\n    QUIZ_HISTORY: 'techkwiz_quiz_history',\n    SESSION_COINS: 'techkwiz_session_coins' // Session-only coin storage\n};\n// Generate a simple user ID\nconst generateUserId = ()=>{\n    return 'user_' + Math.random().toString(36).substr(2, 9);\n};\n// Extract name from email\nconst getNameFromEmail = (email)=>{\n    return email.split('@')[0].replace(/[^a-zA-Z0-9]/g, ' ').trim() || 'Tech Enthusiast';\n};\n// Create a new user profile\nconst createUserProfile = (email, password)=>{\n    const user = {\n        id: generateUserId(),\n        email: email.toLowerCase(),\n        name: getNameFromEmail(email),\n        coins: 0,\n        level: 1,\n        totalQuizzes: 0,\n        correctAnswers: 0,\n        joinDate: new Date().toISOString(),\n        quizHistory: []\n    };\n    return user;\n};\n// Dummy login - accepts any email/password combination\nconst login = (email, password)=>{\n    // Check if user exists in localStorage\n    const existingUser = getUserFromStorage(email);\n    if (existingUser) {\n        // User exists, return their data\n        localStorage.setItem(STORAGE_KEYS.AUTH_TOKEN, 'dummy_token_' + existingUser.id);\n        return existingUser;\n    } else {\n        // New user, create profile\n        const newUser = createUserProfile(email, password);\n        saveUserToStorage(newUser);\n        localStorage.setItem(STORAGE_KEYS.AUTH_TOKEN, 'dummy_token_' + newUser.id);\n        return newUser;\n    }\n};\n// Dummy signup - same as login, just creates new user\nconst signup = (email, password, name)=>{\n    const user = createUserProfile(email, password);\n    if (name) {\n        user.name = name;\n    }\n    saveUserToStorage(user);\n    localStorage.setItem(STORAGE_KEYS.AUTH_TOKEN, 'dummy_token_' + user.id);\n    return user;\n};\n// Logout\nconst logout = ()=>{\n    localStorage.removeItem(STORAGE_KEYS.AUTH_TOKEN);\n};\n// Check if user is authenticated\nconst isAuthenticated = ()=>{\n    return !!localStorage.getItem(STORAGE_KEYS.AUTH_TOKEN);\n};\n// Session-based coin management\nconst getSessionCoins = (userId)=>{\n    try {\n        const sessionCoins = sessionStorage.getItem(STORAGE_KEYS.SESSION_COINS);\n        if (!sessionCoins) return 0;\n        const coinsData = JSON.parse(sessionCoins);\n        return coinsData[userId] || 0;\n    } catch (error) {\n        console.error('Error getting session coins:', error);\n        return 0;\n    }\n};\nconst setSessionCoins = (userId, coins)=>{\n    try {\n        const sessionCoins = sessionStorage.getItem(STORAGE_KEYS.SESSION_COINS);\n        const coinsData = sessionCoins ? JSON.parse(sessionCoins) : {};\n        coinsData[userId] = Math.max(0, coins); // Never go below 0\n        sessionStorage.setItem(STORAGE_KEYS.SESSION_COINS, JSON.stringify(coinsData));\n        console.log(`💰 Session coins updated for ${userId}: ${coins}`);\n    } catch (error) {\n        console.error('Error setting session coins:', error);\n    }\n};\nconst clearSessionCoins = ()=>{\n    try {\n        sessionStorage.removeItem(STORAGE_KEYS.SESSION_COINS);\n        console.log('🧹 Session coins cleared');\n    } catch (error) {\n        console.error('Error clearing session coins:', error);\n    }\n};\n// Get current user from localStorage with session-based coins\nconst getCurrentUser = ()=>{\n    const token = localStorage.getItem(STORAGE_KEYS.AUTH_TOKEN);\n    if (!token) return null;\n    const userId = token.replace('dummy_token_', '');\n    const allUsers = getAllUsersFromStorage();\n    const user = allUsers.find((user)=>user.id === userId);\n    if (user) {\n        // Always get coins from session storage, never from localStorage\n        user.coins = getSessionCoins(userId);\n    }\n    return user || null;\n};\n// Save user data to localStorage (coins are handled separately in session storage)\nconst saveUserToStorage = (user)=>{\n    const allUsers = getAllUsersFromStorage();\n    const existingIndex = allUsers.findIndex((u)=>u.id === user.id || u.email === user.email);\n    // Store coins in session storage, not localStorage\n    setSessionCoins(user.id, user.coins);\n    // Remove coins from user object before saving to localStorage\n    const userWithoutCoins = {\n        ...user,\n        coins: 0\n    };\n    if (existingIndex >= 0) {\n        allUsers[existingIndex] = userWithoutCoins;\n    } else {\n        allUsers.push(userWithoutCoins);\n    }\n    localStorage.setItem(STORAGE_KEYS.USER, JSON.stringify(allUsers));\n};\n// Get user by email from localStorage\nconst getUserFromStorage = (email)=>{\n    const allUsers = getAllUsersFromStorage();\n    return allUsers.find((user)=>user.email === email.toLowerCase()) || null;\n};\n// Get all users from localStorage\nconst getAllUsersFromStorage = ()=>{\n    try {\n        const stored = localStorage.getItem(STORAGE_KEYS.USER);\n        return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n        console.error('Error parsing stored users:', error);\n        return [];\n    }\n};\n// Update user coins (session-based)\nconst updateUserCoins = (userId, coins)=>{\n    setSessionCoins(userId, coins);\n};\n// Add quiz result to user history\nconst addQuizResult = (userId, quizResult)=>{\n    const allUsers = getAllUsersFromStorage();\n    const userIndex = allUsers.findIndex((user)=>user.id === userId);\n    if (userIndex >= 0) {\n        allUsers[userIndex].quizHistory.push(quizResult);\n        allUsers[userIndex].totalQuizzes += 1;\n        allUsers[userIndex].correctAnswers += quizResult.correctAnswers || 0;\n        // Level up logic (every 5 quizzes)\n        const newLevel = Math.floor(allUsers[userIndex].totalQuizzes / 5) + 1;\n        allUsers[userIndex].level = newLevel;\n        localStorage.setItem(STORAGE_KEYS.USER, JSON.stringify(allUsers));\n    }\n};\n// Clear all user data (including session coins)\nconst clearUserData = ()=>{\n    localStorage.removeItem(STORAGE_KEYS.USER);\n    localStorage.removeItem(STORAGE_KEYS.AUTH_TOKEN);\n    localStorage.removeItem(STORAGE_KEYS.QUIZ_HISTORY);\n    clearSessionCoins();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/utils/auth.ts\n");

/***/ }),

/***/ "(ssr)/./src/utils/settingsDataManager.ts":
/*!******************************************!*\
  !*** ./src/utils/settingsDataManager.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   settingsDataManager: () => (/* binding */ settingsDataManager)\n/* harmony export */ });\n/* harmony import */ var _types_admin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types/admin */ \"(ssr)/./src/types/admin.ts\");\n\nclass SettingsDataManager {\n    static getInstance() {\n        if (!SettingsDataManager.instance) {\n            SettingsDataManager.instance = new SettingsDataManager();\n        }\n        return SettingsDataManager.instance;\n    }\n    // System Settings Management\n    getSystemSettings() {\n        // Return default settings if not on client side\n        if (true) {\n            return this.createDefaultSystemSettings();\n        }\n        try {\n            const stored = localStorage.getItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.SETTINGS_STORAGE_KEYS.SYSTEM);\n            if (stored) {\n                const parsed = JSON.parse(stored);\n                return this.validateSystemSettings(parsed);\n            }\n        } catch (error) {\n            console.error('Error loading system settings:', error);\n        }\n        return this.createDefaultSystemSettings();\n    }\n    saveSystemSettings(settings) {\n        // Return false if not on client side\n        if (true) {\n            return false;\n        }\n        try {\n            const current = this.getSystemSettings();\n            const updated = {\n                ...current,\n                ...settings,\n                updatedAt: Date.now()\n            };\n            const validated = this.validateSystemSettings(updated);\n            localStorage.setItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.SETTINGS_STORAGE_KEYS.SYSTEM, JSON.stringify(validated));\n            return true;\n        } catch (error) {\n            console.error('Error saving system settings:', error);\n            return false;\n        }\n    }\n    // User Preferences Management\n    getUserPreferences() {\n        // Return default preferences if not on client side\n        if (true) {\n            return this.createDefaultUserPreferences();\n        }\n        try {\n            const stored = localStorage.getItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.SETTINGS_STORAGE_KEYS.USER_PREFERENCES);\n            if (stored) {\n                const parsed = JSON.parse(stored);\n                return this.validateUserPreferences(parsed);\n            }\n        } catch (error) {\n            console.error('Error loading user preferences:', error);\n        }\n        return this.createDefaultUserPreferences();\n    }\n    saveUserPreferences(preferences) {\n        // Return false if not on client side\n        if (true) {\n            return false;\n        }\n        try {\n            const current = this.getUserPreferences();\n            const updated = {\n                ...current,\n                ...preferences,\n                updatedAt: Date.now()\n            };\n            const validated = this.validateUserPreferences(updated);\n            localStorage.setItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.SETTINGS_STORAGE_KEYS.USER_PREFERENCES, JSON.stringify(validated));\n            return true;\n        } catch (error) {\n            console.error('Error saving user preferences:', error);\n            return false;\n        }\n    }\n    // Security Settings Management\n    getSecuritySettings() {\n        // Return default settings if not on client side\n        if (true) {\n            return this.createDefaultSecuritySettings();\n        }\n        try {\n            const stored = localStorage.getItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.SETTINGS_STORAGE_KEYS.SECURITY);\n            if (stored) {\n                const parsed = JSON.parse(stored);\n                return this.validateSecuritySettings(parsed);\n            }\n        } catch (error) {\n            console.error('Error loading security settings:', error);\n        }\n        return this.createDefaultSecuritySettings();\n    }\n    saveSecuritySettings(settings) {\n        // Return false if not on client side\n        if (true) {\n            return false;\n        }\n        try {\n            const current = this.getSecuritySettings();\n            const updated = {\n                ...current,\n                ...settings,\n                updatedAt: Date.now()\n            };\n            const validated = this.validateSecuritySettings(updated);\n            localStorage.setItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.SETTINGS_STORAGE_KEYS.SECURITY, JSON.stringify(validated));\n            return true;\n        } catch (error) {\n            console.error('Error saving security settings:', error);\n            return false;\n        }\n    }\n    // Integration Settings Management\n    getIntegrationSettings() {\n        // Return default settings if not on client side\n        if (true) {\n            return this.createDefaultIntegrationSettings();\n        }\n        try {\n            const stored = localStorage.getItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.SETTINGS_STORAGE_KEYS.INTEGRATIONS);\n            if (stored) {\n                const parsed = JSON.parse(stored);\n                return this.validateIntegrationSettings(parsed);\n            }\n        } catch (error) {\n            console.error('Error loading integration settings:', error);\n        }\n        return this.createDefaultIntegrationSettings();\n    }\n    saveIntegrationSettings(settings) {\n        // Return false if not on client side\n        if (true) {\n            return false;\n        }\n        try {\n            const current = this.getIntegrationSettings();\n            const updated = {\n                ...current,\n                ...settings,\n                updatedAt: Date.now()\n            };\n            const validated = this.validateIntegrationSettings(updated);\n            localStorage.setItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.SETTINGS_STORAGE_KEYS.INTEGRATIONS, JSON.stringify(validated));\n            return true;\n        } catch (error) {\n            console.error('Error saving integration settings:', error);\n            return false;\n        }\n    }\n    // Backup and Restore\n    createBackup() {\n        try {\n            const backup = {\n                version: this.SETTINGS_VERSION,\n                timestamp: Date.now(),\n                systemSettings: this.getSystemSettings(),\n                userPreferences: this.getUserPreferences(),\n                securitySettings: this.getSecuritySettings(),\n                integrationSettings: this.getIntegrationSettings()\n            };\n            return JSON.stringify(backup, null, 2);\n        } catch (error) {\n            console.error('Error creating backup:', error);\n            throw new Error('Failed to create backup');\n        }\n    }\n    restoreFromBackup(backupData) {\n        try {\n            const backup = JSON.parse(backupData);\n            // Validate backup structure\n            if (!backup.version || !backup.systemSettings || !backup.userPreferences) {\n                throw new Error('Invalid backup format');\n            }\n            // Restore each section\n            this.saveSystemSettings(backup.systemSettings);\n            this.saveUserPreferences(backup.userPreferences);\n            this.saveSecuritySettings(backup.securitySettings);\n            this.saveIntegrationSettings(backup.integrationSettings);\n            return true;\n        } catch (error) {\n            console.error('Error restoring backup:', error);\n            return false;\n        }\n    }\n    // Reset to defaults\n    resetToDefaults() {\n        // Return false if not on client side\n        if (true) {\n            return false;\n        }\n        try {\n            localStorage.removeItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.SETTINGS_STORAGE_KEYS.SYSTEM);\n            localStorage.removeItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.SETTINGS_STORAGE_KEYS.USER_PREFERENCES);\n            localStorage.removeItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.SETTINGS_STORAGE_KEYS.SECURITY);\n            localStorage.removeItem(_types_admin__WEBPACK_IMPORTED_MODULE_0__.SETTINGS_STORAGE_KEYS.INTEGRATIONS);\n            return true;\n        } catch (error) {\n            console.error('Error resetting to defaults:', error);\n            return false;\n        }\n    }\n    // Validation methods\n    validateSystemSettings(settings) {\n        return {\n            id: settings.id || `system_${Date.now()}`,\n            applicationName: settings.applicationName || _types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_SYSTEM_SETTINGS.applicationName,\n            applicationVersion: settings.applicationVersion || _types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_SYSTEM_SETTINGS.applicationVersion,\n            maintenanceMode: Boolean(settings.maintenanceMode),\n            debugMode: Boolean(settings.debugMode),\n            logLevel: [\n                'error',\n                'warn',\n                'info',\n                'debug'\n            ].includes(settings.logLevel) ? settings.logLevel : 'info',\n            maxUsers: Math.max(1, Math.min(1000, Number(settings.maxUsers) || 100)),\n            sessionTimeout: Math.max(5, Math.min(120, Number(settings.sessionTimeout) || 30)),\n            autoBackup: Boolean(settings.autoBackup),\n            backupFrequency: [\n                'daily',\n                'weekly',\n                'monthly'\n            ].includes(settings.backupFrequency) ? settings.backupFrequency : 'weekly',\n            createdAt: settings.createdAt || Date.now(),\n            updatedAt: settings.updatedAt || Date.now()\n        };\n    }\n    validateUserPreferences(preferences) {\n        return {\n            id: preferences.id || `user_${Date.now()}`,\n            theme: [\n                'light',\n                'dark',\n                'auto'\n            ].includes(preferences.theme) ? preferences.theme : 'light',\n            language: preferences.language || 'en',\n            timezone: preferences.timezone || 'UTC',\n            dateFormat: preferences.dateFormat || 'MM/DD/YYYY',\n            timeFormat: [\n                '12h',\n                '24h'\n            ].includes(preferences.timeFormat) ? preferences.timeFormat : '12h',\n            dashboardLayout: [\n                'compact',\n                'comfortable',\n                'spacious'\n            ].includes(preferences.dashboardLayout) ? preferences.dashboardLayout : 'comfortable',\n            notifications: {\n                emailNotifications: Boolean(preferences.notifications?.emailNotifications ?? true),\n                pushNotifications: Boolean(preferences.notifications?.pushNotifications ?? false),\n                systemAlerts: Boolean(preferences.notifications?.systemAlerts ?? true),\n                maintenanceAlerts: Boolean(preferences.notifications?.maintenanceAlerts ?? true),\n                securityAlerts: Boolean(preferences.notifications?.securityAlerts ?? true),\n                digestFrequency: [\n                    'immediate',\n                    'hourly',\n                    'daily',\n                    'weekly'\n                ].includes(preferences.notifications?.digestFrequency) ? preferences.notifications.digestFrequency : 'daily'\n            },\n            accessibility: {\n                highContrast: Boolean(preferences.accessibility?.highContrast ?? false),\n                largeText: Boolean(preferences.accessibility?.largeText ?? false),\n                reducedMotion: Boolean(preferences.accessibility?.reducedMotion ?? false),\n                screenReader: Boolean(preferences.accessibility?.screenReader ?? false),\n                keyboardNavigation: Boolean(preferences.accessibility?.keyboardNavigation ?? true)\n            },\n            createdAt: preferences.createdAt || Date.now(),\n            updatedAt: preferences.updatedAt || Date.now()\n        };\n    }\n    validateSecuritySettings(settings) {\n        return {\n            id: settings.id || `security_${Date.now()}`,\n            passwordPolicy: {\n                minLength: Math.max(6, Math.min(32, Number(settings.passwordPolicy?.minLength) || 8)),\n                requireUppercase: Boolean(settings.passwordPolicy?.requireUppercase ?? true),\n                requireLowercase: Boolean(settings.passwordPolicy?.requireLowercase ?? true),\n                requireNumbers: Boolean(settings.passwordPolicy?.requireNumbers ?? true),\n                requireSpecialChars: Boolean(settings.passwordPolicy?.requireSpecialChars ?? true),\n                expirationDays: Math.max(30, Math.min(365, Number(settings.passwordPolicy?.expirationDays) || 90)),\n                preventReuse: Math.max(1, Math.min(10, Number(settings.passwordPolicy?.preventReuse) || 5))\n            },\n            sessionSecurity: {\n                maxConcurrentSessions: Math.max(1, Math.min(10, Number(settings.sessionSecurity?.maxConcurrentSessions) || 3)),\n                idleTimeout: Math.max(5, Math.min(120, Number(settings.sessionSecurity?.idleTimeout) || 30)),\n                forceLogoutOnPasswordChange: Boolean(settings.sessionSecurity?.forceLogoutOnPasswordChange ?? true),\n                requireReauthForSensitive: Boolean(settings.sessionSecurity?.requireReauthForSensitive ?? true)\n            },\n            loginAttempts: {\n                maxAttempts: Math.max(3, Math.min(10, Number(settings.loginAttempts?.maxAttempts) || 5)),\n                lockoutDuration: Math.max(5, Math.min(60, Number(settings.loginAttempts?.lockoutDuration) || 15)),\n                resetAfter: Math.max(30, Math.min(300, Number(settings.loginAttempts?.resetAfter) || 60)),\n                notifyOnLockout: Boolean(settings.loginAttempts?.notifyOnLockout ?? true)\n            },\n            twoFactorAuth: Boolean(settings.twoFactorAuth ?? false),\n            ipWhitelist: Array.isArray(settings.ipWhitelist) ? settings.ipWhitelist : [],\n            auditLogging: Boolean(settings.auditLogging ?? true),\n            encryptionEnabled: Boolean(settings.encryptionEnabled ?? true),\n            createdAt: settings.createdAt || Date.now(),\n            updatedAt: settings.updatedAt || Date.now()\n        };\n    }\n    validateIntegrationSettings(settings) {\n        return {\n            id: settings.id || `integration_${Date.now()}`,\n            apiConfiguration: {\n                baseUrl: settings.apiConfiguration?.baseUrl || '',\n                apiKey: settings.apiConfiguration?.apiKey || '',\n                rateLimit: Math.max(10, Math.min(10000, Number(settings.apiConfiguration?.rateLimit) || 1000)),\n                timeout: Math.max(1000, Math.min(30000, Number(settings.apiConfiguration?.timeout) || 5000)),\n                retryAttempts: Math.max(0, Math.min(5, Number(settings.apiConfiguration?.retryAttempts) || 3)),\n                enableCaching: Boolean(settings.apiConfiguration?.enableCaching ?? true)\n            },\n            thirdPartyServices: {\n                googleAnalytics: {\n                    enabled: Boolean(settings.thirdPartyServices?.googleAnalytics?.enabled ?? false),\n                    trackingId: settings.thirdPartyServices?.googleAnalytics?.trackingId || '',\n                    anonymizeIp: Boolean(settings.thirdPartyServices?.googleAnalytics?.anonymizeIp ?? true)\n                },\n                adSense: {\n                    enabled: Boolean(settings.thirdPartyServices?.adSense?.enabled ?? false),\n                    publisherId: settings.thirdPartyServices?.adSense?.publisherId || '',\n                    adSlotId: settings.thirdPartyServices?.adSense?.adSlotId || ''\n                },\n                emailService: {\n                    enabled: Boolean(settings.thirdPartyServices?.emailService?.enabled ?? false),\n                    provider: [\n                        'sendgrid',\n                        'mailgun',\n                        'ses'\n                    ].includes(settings.thirdPartyServices?.emailService?.provider) ? settings.thirdPartyServices.emailService.provider : 'sendgrid',\n                    apiKey: settings.thirdPartyServices?.emailService?.apiKey || '',\n                    fromEmail: settings.thirdPartyServices?.emailService?.fromEmail || ''\n                }\n            },\n            webhooks: {\n                enabled: Boolean(settings.webhooks?.enabled ?? false),\n                endpoints: Array.isArray(settings.webhooks?.endpoints) ? settings.webhooks.endpoints : [],\n                retryPolicy: {\n                    maxRetries: Math.max(0, Math.min(5, Number(settings.webhooks?.retryPolicy?.maxRetries) || 3)),\n                    backoffMultiplier: Math.max(1, Math.min(10, Number(settings.webhooks?.retryPolicy?.backoffMultiplier) || 2)),\n                    maxBackoffTime: Math.max(1000, Math.min(60000, Number(settings.webhooks?.retryPolicy?.maxBackoffTime) || 30000))\n                }\n            },\n            socialMedia: {\n                twitter: {\n                    enabled: Boolean(settings.socialMedia?.twitter?.enabled ?? false),\n                    apiKey: settings.socialMedia?.twitter?.apiKey || '',\n                    apiSecret: settings.socialMedia?.twitter?.apiSecret || ''\n                },\n                facebook: {\n                    enabled: Boolean(settings.socialMedia?.facebook?.enabled ?? false),\n                    appId: settings.socialMedia?.facebook?.appId || '',\n                    appSecret: settings.socialMedia?.facebook?.appSecret || ''\n                },\n                linkedin: {\n                    enabled: Boolean(settings.socialMedia?.linkedin?.enabled ?? false),\n                    clientId: settings.socialMedia?.linkedin?.clientId || '',\n                    clientSecret: settings.socialMedia?.linkedin?.clientSecret || ''\n                }\n            },\n            analytics: {\n                customAnalytics: {\n                    enabled: Boolean(settings.analytics?.customAnalytics?.enabled ?? false),\n                    endpoint: settings.analytics?.customAnalytics?.endpoint || '',\n                    apiKey: settings.analytics?.customAnalytics?.apiKey || ''\n                },\n                heatmaps: {\n                    enabled: Boolean(settings.analytics?.heatmaps?.enabled ?? false),\n                    provider: [\n                        'hotjar',\n                        'fullstory',\n                        'logrocket'\n                    ].includes(settings.analytics?.heatmaps?.provider) ? settings.analytics.heatmaps.provider : 'hotjar',\n                    trackingId: settings.analytics?.heatmaps?.trackingId || ''\n                }\n            },\n            notifications: {\n                email: {\n                    enabled: Boolean(settings.notifications?.email?.enabled ?? false),\n                    smtpHost: settings.notifications?.email?.smtpHost || '',\n                    smtpPort: Number(settings.notifications?.email?.smtpPort) || 587,\n                    username: settings.notifications?.email?.username || '',\n                    password: settings.notifications?.email?.password || ''\n                },\n                sms: {\n                    enabled: Boolean(settings.notifications?.sms?.enabled ?? false),\n                    provider: [\n                        'twilio',\n                        'nexmo',\n                        'aws-sns'\n                    ].includes(settings.notifications?.sms?.provider) ? settings.notifications.sms.provider : 'twilio',\n                    apiKey: settings.notifications?.sms?.apiKey || '',\n                    fromNumber: settings.notifications?.sms?.fromNumber || ''\n                },\n                push: {\n                    enabled: Boolean(settings.notifications?.push?.enabled ?? false),\n                    vapidPublicKey: settings.notifications?.push?.vapidPublicKey || '',\n                    vapidPrivateKey: settings.notifications?.push?.vapidPrivateKey || ''\n                }\n            },\n            createdAt: settings.createdAt || Date.now(),\n            updatedAt: settings.updatedAt || Date.now()\n        };\n    }\n    // Default creation methods\n    createDefaultSystemSettings() {\n        return {\n            id: `system_${Date.now()}`,\n            ..._types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_SYSTEM_SETTINGS,\n            createdAt: Date.now(),\n            updatedAt: Date.now()\n        };\n    }\n    createDefaultUserPreferences() {\n        return {\n            id: `user_${Date.now()}`,\n            ..._types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_USER_PREFERENCES,\n            createdAt: Date.now(),\n            updatedAt: Date.now()\n        };\n    }\n    createDefaultSecuritySettings() {\n        return {\n            id: `security_${Date.now()}`,\n            ..._types_admin__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_SECURITY_SETTINGS,\n            createdAt: Date.now(),\n            updatedAt: Date.now()\n        };\n    }\n    createDefaultIntegrationSettings() {\n        return {\n            id: `integration_${Date.now()}`,\n            apiConfiguration: {\n                baseUrl: '',\n                apiKey: '',\n                rateLimit: 1000,\n                timeout: 5000,\n                retryAttempts: 3,\n                enableCaching: true\n            },\n            thirdPartyServices: {\n                googleAnalytics: {\n                    enabled: false,\n                    trackingId: '',\n                    anonymizeIp: true\n                },\n                adSense: {\n                    enabled: false,\n                    publisherId: '',\n                    adSlotId: ''\n                },\n                emailService: {\n                    enabled: false,\n                    provider: 'sendgrid',\n                    apiKey: '',\n                    fromEmail: ''\n                }\n            },\n            webhooks: {\n                enabled: false,\n                endpoints: [],\n                retryPolicy: {\n                    maxRetries: 3,\n                    backoffMultiplier: 2,\n                    maxBackoffTime: 30000\n                }\n            },\n            socialMedia: {\n                twitter: {\n                    enabled: false,\n                    apiKey: '',\n                    apiSecret: ''\n                },\n                facebook: {\n                    enabled: false,\n                    appId: '',\n                    appSecret: ''\n                },\n                linkedin: {\n                    enabled: false,\n                    clientId: '',\n                    clientSecret: ''\n                }\n            },\n            analytics: {\n                customAnalytics: {\n                    enabled: false,\n                    endpoint: '',\n                    apiKey: ''\n                },\n                heatmaps: {\n                    enabled: false,\n                    provider: 'hotjar',\n                    trackingId: ''\n                }\n            },\n            notifications: {\n                email: {\n                    enabled: false,\n                    smtpHost: '',\n                    smtpPort: 587,\n                    username: '',\n                    password: ''\n                },\n                sms: {\n                    enabled: false,\n                    provider: 'twilio',\n                    apiKey: '',\n                    fromNumber: ''\n                },\n                push: {\n                    enabled: false,\n                    vapidPublicKey: '',\n                    vapidPrivateKey: ''\n                }\n            },\n            createdAt: Date.now(),\n            updatedAt: Date.now()\n        };\n    }\n    constructor(){\n        this.SETTINGS_VERSION = '1.0.0';\n    }\n}\nconst settingsDataManager = SettingsDataManager.getInstance();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/utils/settingsDataManager.ts\n");

/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/dynamic-access-async-storage.external":
/*!***************************************************************************************!*\
  !*** external "next/dist/server/app-render/dynamic-access-async-storage.external.js" ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/dynamic-access-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "module":
/*!*************************!*\
  !*** external "module" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("module");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/is-bot":
/*!***********************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-bot" ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-bot");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2F_not-found%2Fpage&page=%2F_not-found%2Fpage&appPaths=&pagePath=%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-not-found.js&appDir=%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjaseem%2FDocuments%2FGitHub%2FTechkwiz-v7%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();